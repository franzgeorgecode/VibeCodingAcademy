export const translations = {
  en: {
    common: { loading: 'Loading...', error: 'Error', success: 'Success', cancel: 'Cancel', save: 'Save', delete: 'Delete', edit: 'Edit', back: 'Back', next: 'Next', previous: 'Previous', continue: 'Continue', finish: 'Finish', retry: 'Retry', saving: 'Saving...', unexpectedError: 'An unexpected error occurred.' },
    profile: { title: "User Profile", firstNameLabel: "First Name", lastNameLabel: "Last Name", saveButton: "Save Changes", errorNoUser: "User not found. Profile cannot be loaded.", errorFetching: "Error fetching profile: ", errorNoUserSaving: "User not found. Cannot save profile.", saveSuccess: "Profile saved successfully!", errorSaving: "Error saving profile: ", errorLogout: "Logout failed: " },
    navigation: { home: 'Home', dashboard: 'Dashboard', lessons: 'My Lessons', badges: 'Badges', certificate: 'Certificate', profile: 'Profile', settings: 'Settings', logout: 'Logout' },
    auth: { login: 'Login', signup: 'Sign Up', logout: 'Logout', email: 'Email Address', password: 'Password', confirmPassword: 'Confirm Password', firstName: 'First Name', lastName: 'Last Name', welcomeBack: 'Welcome Back!', joinVibeCoding: 'Join Vibe Coding', continueJourney: 'Continue your learning journey with SrCode', startAdventure: 'Start your AI-powered coding adventure', forgotPassword: 'Forgot Password?', noAccount: "Do not have an account?", haveAccount: 'Already have an account?', signInInstead: 'Sign In', signUpInstead: 'Sign Up', passwordMinLength: 'Password must be at least 8 characters', passwordsNoMatch: 'Passwords do not match', emailRequired: 'Email is required', invalidEmail: 'Please enter a valid email', checkEmail: 'Success! Check your email to confirm your account.', backToHome: 'Back to Home' },
    landing: { hero: { title: 'Master bolt.new with AI Mentorship', subtitle: 'Learn to build full-stack applications with SrCode, your personal AI mentor. From prompt engineering to deployment - master the future of web development.', startJourney: 'Start Your Journey', watchDemo: 'Watch Demo', aiPowered: 'AI-Powered Learning Platform' }, features: { title: 'Why Choose Vibe Coding?', subtitle: 'Experience the future of coding education with our AI-powered platform', aiLearning: { title: 'AI-Powered Learning', description: 'Learn with SrCode, your personal AI mentor who adapts to your pace' }, realProjects: { title: 'Build Real Projects', description: 'Master bolt.new by building actual applications, not just theory' }, certificates: { title: 'Earn Certificates', description: 'Get industry-recognized certificates to boost your career' } }, stats: { students: 'Students Trained', lessons: 'Comprehensive Lessons', successRate: 'Success Rate', support: 'AI Support' }, testimonials: { title: 'Success Stories', subtitle: 'Join thousands of developers who transformed their careers', alex: { name: 'Alex Chen', role: 'Full-Stack Developer', content: 'SrCode taught me bolt.new faster than any bootcamp. Now I am building production apps in days, not months.' }, maria: { name: 'Maria Rodriguez', role: 'Startup Founder', content: 'The interactive AI mentor is incredible. It is like having a senior developer guiding you 24/7.' }, david: { name: 'David Kim', role: 'Product Manager', content: 'From zero to deploying full-stack apps. The gamification kept me engaged throughout the journey.' } }, cta: { title: 'Ready to Build the Future?', subtitle: 'Join the next generation of developers mastering AI-powered web development', startFree: 'Start Free Today', noCreditCard: 'No credit card required' }, footer: { tagline: 'Building the future, one developer at a time.' } },
    dashboard: { title: 'Dashboard', welcomeBack: 'Welcome back, {{name}}!', myLessons: 'My Lessons', badges: 'Badges', certificate: 'Certificate', stats: { completedLessons: 'Completed Lessons', totalXP: 'Total XP', badgesEarned: 'Badges Earned', progress: 'Progress' }, tabs: { lessons: 'My Lessons', badges: 'Badges', certificate: 'Certificate' } },
    lessons: { title: 'Lessons', level: 'Level {{level}}', lesson: 'Lesson {{level}}.{{order}}', objective: 'Objective', learningObjectives: 'Learning Objectives', practiceExercise: 'Practice Exercise', takeQuiz: 'Take Quiz', retakeQuiz: 'Retake Quiz', requiredScore: '{{score}}% required to pass', readingTime: 'Reading Time: ~{{minutes}} min', lessonNotFound: 'Lesson Not Found', lessonNotAvailable: 'This lesson does not exist or is not available.', backToDashboard: 'Back to Dashboard', srCodeSays: 'SrCode says:', levels: { foundations: 'Foundations', databases: 'Databases', authentication: 'Authentication', deployment: 'Deployment', integrations: 'Integrations', mastery: 'Mastery' }, descriptions: { foundations: 'Learn the basics of bolt.new and prompt engineering', databases: 'Master Supabase integration and database design', authentication: 'Implement secure user authentication systems', deployment: 'Deploy your applications to the world', integrations: 'Connect with external services and APIs', mastery: 'Become a bolt.new expert with advanced projects' }, status: { locked: 'Complete previous lesson to unlock', available: 'Available to start', inProgress: 'In progress', completed: 'Completed', score: 'Score: {{score}}%' }, continueNext: 'üéâ Congratulations! You completed "{{currentLessonTitle}}". Do you want to continue with "{{nextLessonTitle}}"?', nextLessonDefaultTitle: "the next lesson", "lesson-1-1": { title: "What the Hell is bolt.new?", lessonTitleKey: "lessons.lesson-1-1.title", objective: "Understand bolt.new as an AI web development agent", content: "# What the Hell is bolt.new?\n\nWelcome to your first lesson in the Vibe Coding Academy! I\'m SrCode, and I\'ll be your mentor throughout this journey.\n\n## What is bolt.new?\n\nbolt.new is a revolutionary AI-powered web development agent that allows you to build full-stack applications using natural language prompts. Think of it as having a senior developer who:\n\n- Never gets tired or frustrated\n- Doesn\'t need coffee breaks\n- Never argues about coding standards\n- Can build entire applications from scratch\n- Integrates seamlessly with modern tools\n\n## Key Features:\n\n### üöÄ **AI-Powered Development**\nbolt.new uses advanced AI to understand your requirements and generate complete, functional code. You describe what you want, and it builds it.\n\n### üåê **Full-Stack Capabilities**\n- Frontend development (React, Vue, Svelte)\n- Backend integration (APIs, databases)\n- Styling (CSS, Tailwind, styled-components)\n- State management\n- Authentication systems\n\n### ‚ö° **Instant Deployment**\nBuilt-in integration with:\n- Netlify for hosting\n- Supabase for databases\n- GitHub for version control\n- Custom domains\n\nRemember: The quality of your output depends on the quality of your input. Learning to write effective prompts is crucial!", learningObjectives: ["Define what bolt.new is and its core purpose", "Identify the main advantages over traditional development", "Recognize ideal use cases for bolt.new projects", "Understand the basic workflow of building with bolt.new"], badgeName: "First Contact", srcodeCommentary: "bolt.new is like having a senior developer who never gets tired, never asks for coffee, and never argues about tabs vs spaces. Amazing, right?", practiceDescription: "Explore the bolt.new interface and try creating a simple \'Hello World\' project to get familiar with the platform.", quizQuestions: { "q1-1-1": { question: "What is bolt.new?", options: ["A traditional code editor", "An AI-powered web development agent", "A database management tool", "A design software"], explanation: "bolt.new is an AI-powered web development agent that allows you to build full-stack applications using natural language prompts." }, "q1-1-2": { question: "What is the main advantage of using bolt.new?", options: ["It\'s completely free", "It only works with JavaScript", "It can build applications from natural language descriptions", "It replaces all other development tools"], explanation: "The main advantage is that bolt.new can understand natural language descriptions and generate complete, functional applications." }, "q1-1-3": { question: "Which of these is NOT a feature of bolt.new?", options: ["AI-powered development", "Instant deployment", "Physical hardware setup", "Full-stack capabilities"], explanation: "bolt.new is entirely web-based and doesn\'t require any physical hardware setup." }, "q1-1-4": { question: "What type of projects is bolt.new ideal for?", options: ["Only mobile applications", "Web applications, SaaS, landing pages, and e-commerce", "Only static websites", "Desktop applications only"], explanation: "bolt.new is ideal for various web-based projects including SaaS applications, landing pages, e-commerce sites, and more." } } }, "lesson-1-2": { title: "The Art of the Perfect Prompt", lessonTitleKey: "lessons.lesson-1-2.title", objective: "Write effective prompts for bolt.new", content: "# The Art of the Perfect Prompt\n\nNow that you know what bolt.new is, let\'s learn how to communicate with it effectively. Writing good prompts is like being a great architect - you need to be specific, clear, and detailed.\n\n## What Makes a Perfect Prompt?\n\n### üéØ **Specificity is Key**\nDon\'t say: \"Make me a cool website\"\nDo say: \"Create a landing page for a fitness app with a hero section, pricing table, testimonials, and contact form using a dark theme\"\n\n### üìã **Structure Your Requests**\nA good prompt has these elements:\n1. **Project Type**: What you\'re building\n2. **Features**: Specific functionality needed\n3. **Design**: Visual preferences and styling\n4. **Technical Requirements**: Integrations, frameworks, etc.\n\n## The CLEAR Method:\n- **C**ontext: What type of project\n- **L**ist: Specific features needed\n- **E**xample: Reference similar projects\n- **A**esthetics: Design preferences\n- **R**equirements: Technical specifications\n\n## Common Mistakes to Avoid:\n1. **Too Vague**: \"Make it look good\"\n2. **Too Complex**: Asking for everything at once\n3. **No Context**: Not explaining the purpose\n4. **Missing Requirements**: Forgetting mobile responsiveness\n5. **Unclear Priorities**: Not specifying what\'s most important", learningObjectives: ["Write clear and specific prompts for bolt.new", "Understand the CLEAR method for prompt structure", "Avoid common prompting mistakes", "Use iterative prompting for refinement"], badgeName: "AI Whisperer", srcodeCommentary: "A good prompt is like a cooking recipe: specific, clear, and without weird ingredients. None of that \'make me a cool app\' nonsense, please üôÑ", practiceDescription: "Create a detailed prompt for a landing page of your choice, then test it in bolt.new to see the results.", quizQuestions: { "q1-2-1": { question: "What does the \'C\' in the CLEAR method stand for?", options: ["Color", "Context", "Code", "Components"], explanation: "In the CLEAR method, \'C\' stands for Context - explaining what type of project you\'re building." }, "q1-2-2": { question: "Which is an example of a well-structured prompt?", options: ["Make me a cool app", "Build something with React", "Create an e-commerce site with product catalog, shopping cart, and Stripe integration using modern design", "I need a website"], explanation: "A well-structured prompt is specific, includes features, and mentions technical requirements and design preferences." }, "q1-2-3": { question: "What should you do if your first prompt doesn\'t give perfect results?", options: ["Give up and start over", "Use iterative prompting to refine", "Always use the same prompt", "Never make changes"], explanation: "Iterative prompting allows you to refine and improve your application with follow-up requests." }, "q1-2-4": { question: "Which element is NOT essential in a good prompt?", options: ["Specific features needed", "Technical requirements", "Your personal life story", "Design preferences"], explanation: "Personal information is not relevant to building applications - focus on project requirements instead." } } }, "lesson-1-3": { title: "WebContainers: The Magic Behind the Curtain", lessonTitleKey: "lessons.lesson-1-3.title", objective: "Understand StackBlitz development environment", content: "# WebContainers: The Magic Behind the Curtain\n\nEver wondered how bolt.new runs an entire development environment in your browser? The answer is WebContainers - a revolutionary technology that brings Node.js to the browser.\n\n## What Are WebContainers?\n\nWebContainers are a browser-based runtime for executing Node.js applications and operating system commands. Think of them as:\n- A complete Node.js environment in your browser\n- No downloads or installations required\n- Full terminal access and package management\n- Real-time collaboration capabilities\n\n## How WebContainers Work:\n\n### üåê **Browser-Native**\n- Runs entirely in your browser using WebAssembly\n- No server-side execution needed\n- Your code stays private and secure\n- Works offline once loaded\n\n### ‚ö° **Performance Benefits**\n- Instant startup times\n- Hot module replacement\n- Real-time preview updates\n- Efficient resource usage\n\n### üîí **Security Features**\n- Sandboxed execution environment\n- No access to your local file system\n- Secure by design\n- Network isolation\n\n## Key Advantages:\n- **Instant Setup**: No environment configuration\n- **Universal Access**: Works on any device with a browser\n- **Resource Efficiency**: No local storage usage\n- **Collaboration Ready**: Share projects with a URL", learningObjectives: ["Understand what WebContainers are and how they work", "Navigate the StackBlitz IDE effectively", "Use the integrated terminal for development tasks", "Recognize the advantages and limitations of browser-based development"], badgeName: "Tech Detective", srcodeCommentary: "WebContainers are like Docker but for your browser. Yes, it\'s as cool as it sounds. No, you don\'t need to understand Docker for this üòâ", practiceDescription: "Explore the StackBlitz IDE interface, open the terminal, and try running some basic commands like \'npm --version\' and \'ls\'.", quizQuestions: { "q1-3-1": { question: "What are WebContainers?", options: ["Docker containers for web apps", "A browser-based runtime for Node.js applications", "A type of web server", "A database technology"], explanation: "WebContainers are a browser-based runtime that allows Node.js applications to run entirely in the browser using WebAssembly." }, "q1-3-2": { question: "What is a key advantage of WebContainers?", options: ["They require local installation", "They only work on specific operating systems", "They provide instant setup with no downloads required", "They are slower than traditional development"], explanation: "WebContainers provide instant setup with no downloads or installations required, making development immediately accessible." }, "q1-3-3": { question: "How do you install packages in a WebContainer?", options: ["Download them manually", "Use npm or yarn in the integrated terminal", "Upload files directly", "WebContainers don\'t support packages"], explanation: "You can install packages using npm or yarn commands in the integrated terminal, just like in traditional development." }, "q1-3-4": { question: "What powers the execution of Node.js in WebContainers?", options: ["Server-side processing", "Local file system", "WebAssembly", "Browser plugins"], explanation: "WebContainers use WebAssembly to run Node.js applications entirely in the browser without server-side processing." } } }, "lesson-2-1": { title: "Connecting Supabase Like a Pro", lessonTitleKey: "lessons.lesson-2-1.title", objective: "Set up Supabase in bolt.new step by step", content: "# Connecting Supabase Like a Pro\n\nWelcome to Level 2! Now we\'re getting into the real meat and potatoes of modern web development. Supabase is going to be your new best friend - think of it as Firebase, but actually developer-friendly.\n\n## What is Supabase?\n\nSupabase is an open-source Backend-as-a-Service (BaaS) that provides:\n- **PostgreSQL Database**: Real SQL, not some NoSQL nonsense\n- **Authentication**: Built-in user management\n- **Real-time subscriptions**: Live data updates\n- **Edge Functions**: Serverless functions at the edge\n- **Storage**: File and image handling\n- **Auto-generated APIs**: RESTful and GraphQL\n\n## Step-by-Step Connection Process:\n\n### **Step 1: Create Your Supabase Project**\n1. Go to supabase.com\n2. Sign up or log in\n3. Click \"New Project\"\n4. Choose your organization\n5. Fill in project details\n6. Click \"Create new project\"\n\n### **Step 2: Get Your Project Credentials**\n1. Go to Settings ‚Üí API\n2. Copy Project URL and Anon Key\n\n### **Step 3: Connect in bolt.new**\n1. In your project, go to integrations\n2. Select \"Supabase\"\n3. Enter your credentials\n4. Test the connection\n\n## Best Practices:\n- Never expose service role keys in frontend code\n- Use Row Level Security (RLS) policies\n- Validate data on both client and server sides\n- Use environment variables for credentials", learningObjectives: ["Create and configure a Supabase project", "Connect Supabase to bolt.new successfully", "Understand environment variables and security", "Troubleshoot common connection issues"], badgeName: "Supreme Connector", srcodeCommentary: "Settings > Applications > Connect. Easier than assembling IKEA furniture... and with fewer tears", practiceDescription: "Create your own Supabase project and successfully connect it to a new bolt.new project.", quizQuestions: { "q2-1-1": { question: "What is the first step to connect Supabase to bolt.new?", options: ["Write database queries", "Create a Supabase project and get credentials", "Install Supabase CLI", "Configure authentication"], explanation: "You must first create a Supabase project and obtain your project URL and API keys before connecting." }, "q2-1-2": { question: "Which Supabase key should you use in frontend code?", options: ["Service Role Key", "Secret Key", "Anon Key", "Master Key"], explanation: "The Anon Key is safe to use in frontend code as it respects Row Level Security policies." }, "q2-1-3": { question: "Where should you store your Supabase credentials for security?", options: ["Directly in the code", "In comments", "In environment variables", "In a public file"], explanation: "Environment variables keep your credentials secure and separate from your codebase." }, "q2-1-4": { question: "What does RLS stand for in Supabase?", options: ["Real Live Streaming", "Row Level Security", "Rapid Loading System", "Remote Login Service"], explanation: "Row Level Security (RLS) ensures that users can only access data they\'re authorized to see." } } }, "lesson-2-2": { title: "Database Schemas: Your New Best Friend", lessonTitleKey: "lessons.lesson-2-2.title", objective: "Design effective database schemas", content: "# Database Schemas: Your New Best Friend\n\nTime to talk about the foundation of any great application - the database schema. Think of it as the blueprint for your data mansion.\n\n## What is a Database Schema?\n\nA database schema is the structure that defines:\n- **Tables**: Where your data lives\n- **Columns**: What data you store\n- **Relationships**: How data connects\n- **Constraints**: Rules your data must follow\n- **Indexes**: How to find data quickly\n\n## Core Schema Design Principles:\n\n### üéØ **Normalization (But Not Too Much)**\n- Remove duplicate data\n- Create logical relationships\n- Don\'t over-normalize (sometimes duplication is okay)\n\n### üîó **Relationships Matter**\n- **One-to-One**: User ‚Üí Profile\n- **One-to-Many**: User ‚Üí Posts\n- **Many-to-Many**: Users ‚Üî Roles\n\n### üìù **Data Types Are Important**\n- Use the right type for the job\n- Consider storage and performance\n- Plan for future growth\n\n## Key Schema Concepts:\n\n### **Primary Keys**\n- Unique identifier for each row\n- Use UUID for better distribution\n- Never change or reuse\n\n### **Foreign Keys**\n- Link tables together\n- Enforce referential integrity\n- Define cascade behavior\n\n### **Constraints**\n- CHECK: Validate data values\n- UNIQUE: Prevent duplicates\n- NOT NULL: Require values", learningObjectives: ["Design efficient database schemas", "Understand table relationships and constraints", "Implement Row Level Security in Supabase", "Apply schema design best practices"], badgeName: "Data Architect", srcodeCommentary: "A good schema is like a well-founded house. Without it, everything collapses faster than my January diets", practiceDescription: "Design a schema for a blog application with users, posts, comments, and categories.", quizQuestions: { "q2-2-1": { question: "What is a database schema?", options: ["A type of database", "The structure that defines tables, columns, and relationships", "A query language", "A backup system"], explanation: "A database schema is the structure that defines how data is organized, including tables, columns, relationships, and constraints." }, "q2-2-2": { question: "Which relationship type connects Users to Posts where each user can have many posts?", options: ["One-to-One", "One-to-Many", "Many-to-Many", "Many-to-One"], explanation: "One-to-Many relationship allows one user to have multiple posts, but each post belongs to only one user." }, "q2-2-3": { question: "What does RLS stand for in Supabase?", options: ["Real-time Live Streaming", "Row Level Security", "Relational Logic System", "Remote Login Service"], explanation: "Row Level Security (RLS) controls which users can access which rows in a table based on policies." }, "q2-2-4": { question: "Why should you use UUID for primary keys?", options: ["They are smaller than integers", "They provide better distribution and avoid conflicts", "They are easier to remember", "They are required by Supabase"], explanation: "UUIDs provide better distribution across systems and avoid conflicts when merging data from different sources." } } }, "lesson-2-3": { title: "Edge Functions: Unlimited Power", lessonTitleKey: "lessons.lesson-2-3.title", objective: "Create and manage Edge Functions", content: "# Edge Functions: Unlimited Power\n\nWelcome to the powerful side of Supabase! Edge Functions are like having superpowers for your backend.\n\n## What Are Edge Functions?\n\nEdge Functions are serverless functions that run on Supabase\'s global edge network. Think of them as:\n- **Mini servers** that run your custom logic\n- **API endpoints** you can customize completely\n- **Event handlers** that respond to database changes\n- **Data processors** that transform information\n\n## Why Edge Functions Rock:\n\n### ‚ö° **Performance**\n- Run close to your users worldwide\n- Sub-100ms response times\n- Auto-scaling based on demand\n\n### üîí **Security**\n- Server-side execution (secrets stay secret)\n- Built-in authentication context\n- Row Level Security integration\n\n### üõ†Ô∏è **Flexibility**\n- Use any JavaScript/TypeScript code\n- Access to full Node.js ecosystem\n- Custom business logic implementation\n\n## Common Use Cases:\n\n### **1. API Integrations**\n- Payment processing with Stripe\n- Email sending with SendGrid\n- Social media integrations\n- Third-party API calls\n\n### **2. Data Processing**\n- Image resizing and optimization\n- Data validation and sanitization\n- Complex calculations\n- Report generation\n\n### **3. Webhooks**\n- Payment confirmations\n- User notifications\n- Data synchronization\n- Real-time updates\n\n### **4. Authentication Logic**\n- Multi-factor authentication\n- Custom user validation\n- Role-based permissions\n- Third-party OAuth", learningObjectives: ["Understand what Edge Functions are and their benefits", "Create and deploy Edge Functions in Supabase", "Implement common use cases like API integrations", "Apply security best practices for serverless functions"], badgeName: "Edge Lord", srcodeCommentary: "Edge Functions are like having superpowers. Use them wisely, young Padawan üåü", practiceDescription: "Create an Edge Function that validates email addresses and checks if they\'re from disposable email services.", quizQuestions: { "q2-3-1": { question: "What are Edge Functions?", options: ["Database queries that run faster", "Serverless functions that run on Supabase\'s global edge network", "Frontend components", "CSS styling functions"], explanation: "Edge Functions are serverless functions that run on Supabase\'s global edge network, providing fast, scalable backend logic." }, "q2-3-2": { question: "When should you use Edge Functions vs API routes?", options: ["Always use Edge Functions", "When you need server-side logic, external API calls, or custom authentication", "Only for database operations", "Never use Edge Functions"], explanation: "Edge Functions are ideal for server-side logic, external API integrations, payment processing, and any logic that requires secrets." }, "q2-3-3": { question: "How do you handle errors in Edge Functions?", options: ["Ignore them", "Use try-catch blocks and return appropriate error responses", "Let them crash the function", "Only log them to console"], explanation: "Proper error handling with try-catch blocks and meaningful error responses ensures robust functions." }, "q2-3-4": { question: "Where should you store API keys in Edge Functions?", options: ["Directly in the code", "In comments", "In environment variables", "In the function name"], explanation: "Environment variables keep your API keys and secrets secure and separate from your code." } } }, "lesson-3-1": { title: "Auth Basics: Who Are You?", lessonTitleKey: "lessons.lesson-3-1.title", objective: "Implement basic login/registration", content: "# Auth Basics: Who Are You?\n\nAuthentication is verifying who someone claims to be. It\'s like checking ID at the door.\n\n## Authentication vs Authorization\n- **Authentication**: Who are you? (Login)\n- **Authorization**: What can you do? (Permissions)\n\n## Supabase Auth Features:\n- Email/password authentication\n- Social login (Google, GitHub, etc.)\n- Magic links (passwordless)\n- JWT tokens for sessions\n- Row Level Security integration\n\n## Basic Implementation:\n1. Configure Supabase Auth\n2. Create sign up/sign in functions\n3. Handle auth state changes\n4. Implement proper error handling\n\n## Best Practices:\n- Validate email format\n- Enforce strong passwords\n- Use HTTPS everywhere\n- Handle edge cases properly", learningObjectives: ["Understand authentication concepts and terminology", "Implement user registration and login with Supabase", "Create auth forms with proper validation", "Manage authentication state in React applications"], badgeName: "Digital Guardian", srcodeCommentary: "Supabase Auth is so easy that even I could do it... and I\'m an AI without fingers ü§ñ", practiceDescription: "Build a complete authentication system with registration, login, and logout functionality.", quizQuestions: { "q3-1-1": { question: "What is the difference between authentication and authorization?", options: ["They are the same thing", "Authentication verifies identity, authorization determines permissions", "Authorization verifies identity, authentication determines permissions", "There is no difference"], explanation: "Authentication answers \'who are you?\' while authorization answers \'what can you do?\'" }, "q3-1-2": { question: "How does Supabase handle password security?", options: ["Passwords are stored in plain text", "Passwords are automatically hashed and secured", "Users must hash their own passwords", "Passwords are encrypted with a simple algorithm"], explanation: "Supabase automatically handles password hashing using industry-standard algorithms." }, "q3-1-3": { question: "What should you validate when a user registers?", options: ["Only email format", "Only password strength", "Email format, password strength, and confirm password match", "Nothing - trust the user"], explanation: "Proper validation includes email format, password strength requirements, and password confirmation." }, "q3-1-4": { question: "How do you listen for authentication state changes in Supabase?", options: ["Check manually every second", "Use supabase.auth.onAuthStateChange()", "Refresh the page", "Authentication state never changes"], explanation: "supabase.auth.onAuthStateChange() provides real-time updates when authentication state changes." } } }, "lesson-3-2": { title: "Protecting Routes Like Fort Knox", lessonTitleKey: "lessons.lesson-3-2.title", objective: "Middleware and route protection", content: "# Protecting Routes Like Fort Knox\n\nRoute protection ensures only authorized users access protected content.\n\n## Types of Protected Routes:\n- **Authentication Required**: Dashboard, profile\n- **Role-Based Access**: Admin panels, moderator tools\n- **Conditional Access**: Subscription features\n\n## Implementation Patterns:\n1. Protected Route component\n2. Role-based route guards\n3. Subscription-based protection\n4. Row Level Security (RLS)\n\n## Best Practices:\n- Validate on both client and server\n- Show loading states during auth checks\n- Provide clear error messages\n- Use RLS for database-level protection\n\n## Testing:\n- Test with different user types\n- Test expired sessions\n- Test edge cases", learningObjectives: ["Implement authentication-based route protection", "Create role-based access control systems", "Use React Router guards effectively", "Apply Row Level Security for data protection"], badgeName: "Night Watchman", srcodeCommentary: "An unprotected route is like leaving your door open with a \'free entry\' sign. Spoiler: nobody respects those signs", practiceDescription: "Create a multi-level route protection system with different access levels.", quizQuestions: { "q3-2-1": { question: "What is the purpose of route protection?", options: ["To make the app faster", "To ensure only authorized users can access certain pages", "To improve SEO", "To reduce bundle size"], explanation: "Route protection ensures that only authenticated and authorized users can access protected pages." }, "q3-2-2": { question: "What should you do while checking authentication status?", options: ["Show an error message", "Redirect immediately", "Show a loading state", "Hide the entire page"], explanation: "You should show a loading state while checking authentication to provide good user experience." }, "q3-2-3": { question: "What is Row Level Security (RLS)?", options: ["Client-side route protection", "Database-level security that controls which rows users can access", "A React component", "A type of authentication"], explanation: "Row Level Security (RLS) is a database feature that controls which rows users can see and modify." }, "q3-2-4": { question: "Why should you validate permissions on both client and server?", options: ["It\'s not necessary", "Client-side for UX, server-side for security", "Only server-side validation matters", "Only client-side validation is needed"], explanation: "Client-side validation provides immediate feedback, while server-side validation ensures security." } } }, "lesson-3-3": { title: "Social Auth: The Easy Way", lessonTitleKey: "lessons.lesson-3-3.title", objective: "Implement Google/GitHub login", content: "# Social Auth: The Easy Way\n\nWhy make users remember another password when they can just click \'Login with Google\'?\n\n## Benefits of Social Auth:\n- No new password to remember\n- Faster registration process\n- Trusted authentication provider\n- Higher conversion rates\n\n## Implementation Steps:\n1. Configure OAuth providers (Google, GitHub)\n2. Set up Supabase social auth\n3. Implement social login buttons\n4. Handle user profile data\n5. Manage account linking\n\n## Security Considerations:\n- Validate redirect URLs\n- Use HTTPS in production\n- Handle email conflicts properly\n- Store minimal user data\n\n## Best Practices:\n- Provide clear error messages\n- Handle popup blockers\n- Test with different providers\n- Monitor conversion rates", learningObjectives: ["Implement Google and GitHub social authentication", "Handle social auth data and user profiles", "Manage multiple linked accounts per user", "Apply social auth security best practices"], badgeName: "Social Butterfly", srcodeCommentary: "Why remember another password when Google already knows everything about you? Embrace the convenience üòé", practiceDescription: "Implement a complete social authentication system with Google and GitHub.", quizQuestions: { "q3-3-1": { question: "What is the main benefit of social authentication for users?", options: ["It\'s more secure than passwords", "They don\'t need to create and remember another password", "It\'s faster to implement", "It works offline"], explanation: "Social authentication eliminates the need for users to create and remember another password." }, "q3-3-2": { question: "Where do you configure OAuth redirect URIs?", options: ["In your frontend code", "In Supabase database", "In the provider\'s developer console", "In your package.json"], explanation: "OAuth redirect URIs must be configured in each provider\'s developer console for security." }, "q3-3-3": { question: "How do you handle multiple social accounts for one user?", options: ["Create separate user accounts", "Use account linking to connect multiple providers to one user", "Only allow one provider per user", "Merge accounts automatically"], explanation: "Account linking allows users to connect multiple social providers to a single user account." }, "q3-3-4": { question: "What should you do when email conflicts occur?", options: ["Create a duplicate account", "Reject the signup completely", "Suggest linking the account or signing in with the original provider", "Delete the existing account"], explanation: "When email conflicts occur, guide users to either link their account or sign in with their original method." } } }, "lesson-4-1": { title: "Netlify: Your Best Friend for Deploy", lessonTitleKey: "lessons.lesson-4-1.title", objective: "Deploy using Netlify integration", content: "# Netlify: Your Best Friend for Deploy\n\nTime to deploy your creation to the world! Netlify makes deployment magical.\n\n## What is Netlify?\n- Static Site Hosting with global CDN\n- Serverless Functions\n- Continuous Deployment\n- Form Handling\n- Split Testing\n\n## Deployment Process:\n1. Prepare your project (build scripts, env vars)\n2. Deploy from bolt.new (one-click)\n3. Configure environment variables\n4. Set up custom domain\n5. Monitor performance\n\n## Optimization Tips:\n- Lazy load components\n- Optimize images\n- Use code splitting\n- Enable compression\n- Set up proper caching\n\n## Best Practices:\n- Use environment variables\n- Set up SPA redirects\n- Monitor build logs\n- Test deployed version", learningObjectives: ["Deploy applications to Netlify from bolt.new", "Configure environment variables for production", "Optimize applications for production deployment", "Troubleshoot common deployment issues"], badgeName: "Space Launcher", srcodeCommentary: "Netlify + bolt.new is like Batman and Robin, but for deployment. And yes, you\'re Robin in this analogy ü¶∏‚Äç‚ôÇÔ∏è", practiceDescription: "Deploy a complete application to Netlify with proper environment variable configuration.", quizQuestions: { "q4-1-1": { question: "What is the correct build command for a Vite project in Netlify?", options: ["npm start", "npm run build", "npm run dev", "vite build"], explanation: "The build command \'npm run build\' runs the build script defined in package.json." }, "q4-1-2": { question: "Where should environment variables be configured for production?", options: ["In the source code", "In the .env file committed to Git", "In Netlify\'s environment variables section", "In package.json"], explanation: "Environment variables should be configured in Netlify\'s dashboard for security." }, "q4-1-3": { question: "What redirect rule is essential for SPAs?", options: ["/api/* /backend/:splat 200", "/* /index.html 200", "/old /new 301", "/404 /error 200"], explanation: "The \'/* /index.html 200\' redirect ensures all routes are handled by the SPA\'s client-side routing." }, "q4-1-4": { question: "How do you optimize a React app for production?", options: ["Just run npm run build", "Use lazy loading, code splitting, and remove console.logs", "Only minify the code", "Optimization is not necessary"], explanation: "Production optimization includes lazy loading, code splitting, and removing development code." } } }, "lesson-4-2": { title: "Custom Domains: Your Personal Brand", lessonTitleKey: "lessons.lesson-4-2.title", objective: "Configure custom domains", content: "# Custom Domains: Your Personal Brand\n\nTime to give your app a professional address!\n\n## Why Custom Domains Matter:\n- Professional appearance\n- Brand recognition\n- Better SEO\n- User trust\n- Easier to remember\n\n## Setup Process:\n1. Purchase a domain\n2. Configure DNS settings\n3. Add domain to Netlify\n4. Verify SSL certificate\n5. Test everything\n\n## DNS Configuration:\n- A record: Points to Netlify\'s load balancer\n- CNAME: Points subdomain to Netlify\n- SSL: Automatic with Let\'s Encrypt\n\n## Best Practices:\n- Use HTTPS everywhere\n- Set up www redirects\n- Monitor SSL certificates\n- Test from different locations", learningObjectives: ["Purchase and configure custom domains", "Set up DNS records correctly", "Verify SSL certificates", "Implement domain best practices"], badgeName: "Domain Lord", srcodeCommentary: "A custom domain is like having an elegant address. No more \'my-random-app-123.netlify.app\'", practiceDescription: "Set up a custom domain for your deployed application with proper DNS configuration.", quizQuestions: { "q4-2-1": { question: "What DNS record type should you use to point your root domain to Netlify?", options: ["CNAME", "A record", "MX record", "TXT record"], explanation: "An A record is used to point the root domain to Netlify\'s IP address." }, "q4-2-2": { question: "How does Netlify handle SSL certificates?", options: ["You must purchase them separately", "Automatic SSL with Let\'s Encrypt", "SSL is not supported", "Only paid plans get SSL"], explanation: "Netlify automatically provides SSL certificates using Let\'s Encrypt for all sites." }, "q4-2-3": { question: "What should you do with the www subdomain?", options: ["Ignore it completely", "Set up a redirect to your main domain", "Use it as the primary domain", "Delete the www record"], explanation: "It\'s best practice to set up a redirect from www to your main domain (or vice versa) for consistency." }, "q4-2-4": { question: "How long does DNS propagation typically take?", options: ["Immediately", "Up to 48 hours", "Exactly 24 hours", "One week"], explanation: "DNS propagation can take up to 48 hours to complete worldwide, though it\'s often faster." } } }, "lesson-4-3": { title: "CI/CD: The Future is Now", lessonTitleKey: "lessons.lesson-4-3.title", objective: "Configure automatic deployments with GitHub", content: "# CI/CD: The Future is Now\n\nContinuous Integration and Deployment - your personal deployment butler!\n\n## What is CI/CD?\n- **CI**: Continuous Integration (automated testing)\n- **CD**: Continuous Deployment (automated deployment)\n- Push code ‚Üí Tests run ‚Üí Deploy automatically\n\n## Benefits:\n- Faster development cycles\n- Reduced human error\n- Consistent deployments\n- Automatic testing\n- Easy rollbacks\n\n## GitHub Actions Setup:\n1. Connect GitHub repository\n2. Configure build triggers\n3. Set up testing pipeline\n4. Deploy on successful tests\n5. Monitor deployment status\n\n## Best Practices:\n- Test before deploying\n- Use staging environments\n- Monitor deployment metrics\n- Set up notifications\n- Plan rollback strategies", learningObjectives: ["Understand CI/CD concepts and benefits", "Set up automated deployments with GitHub", "Configure testing pipelines", "Implement deployment best practices"], badgeName: "Automation Master", srcodeCommentary: "CI/CD is like having a butler who does everything for you. Except you don\'t need to pay them or give them vacation days", practiceDescription: "Set up a complete CI/CD pipeline with GitHub Actions for automated testing and deployment.", quizQuestions: { "q4-3-1": { question: "What does CI/CD stand for?", options: ["Code Integration/Code Deployment", "Continuous Integration/Continuous Deployment", "Central Integration/Central Deployment", "Custom Integration/Custom Deployment"], explanation: "CI/CD stands for Continuous Integration and Continuous Deployment." }, "q4-3-2": { question: "What happens in a typical CI/CD pipeline?", options: ["Only code deployment", "Only testing", "Code push ‚Üí Tests run ‚Üí Deploy if tests pass", "Manual deployment only"], explanation: "A typical CI/CD pipeline runs tests automatically when code is pushed and deploys only if tests pass." }, "q4-3-3": { question: "What is the main benefit of automated deployment?", options: ["It\'s more expensive", "Reduces human error and speeds up development", "It requires more manual work", "It\'s only for large companies"], explanation: "Automated deployment reduces human error, speeds up development cycles, and ensures consistent deployments." }, "q4-3-4": { question: "When should you deploy to production?", options: ["Immediately after writing code", "Only after tests pass and code review is complete", "Once a year", "Never use automation"], explanation: "Code should only be deployed to production after passing all tests and completing code review processes." } } }, "lesson-5-1": { title: "GitHub: Your Safety Net", lessonTitleKey: "lessons.lesson-5-1.title", objective: "Complete GitHub integration", content: "# GitHub: Your Safety Net\n\nGitHub is like insurance for your code - you never know when you\'ll need it until you URGENTLY need it!\n\n## Why GitHub Integration Matters:\n- Version control and history\n- Collaboration capabilities\n- Backup and recovery\n- Code sharing and open source\n- Professional portfolio\n\n## Key Features:\n- Repository management\n- Branch strategies\n- Pull requests and code review\n- Issues and project management\n- GitHub Actions for CI/CD\n\n## Best Practices:\n- Commit early and often\n- Write meaningful commit messages\n- Use branches for features\n- Review code before merging\n- Keep repositories organized\n\n## Integration with bolt.new:\n1. Connect GitHub account\n2. Create repository\n3. Set up automatic sync\n4. Configure webhooks\n5. Enable collaborative features", learningObjectives: ["Set up GitHub integration with bolt.new", "Understand Git workflows and best practices", "Implement collaborative development processes", "Use GitHub for project management"], badgeName: "Git Guru", srcodeCommentary: "GitHub is like car insurance for your code. You never know when you\'ll need it until you URGENTLY need it", practiceDescription: "Set up a GitHub repository for your project and practice making commits, branches, and pull requests.", quizQuestions: { "q5-1-1": { question: "What is the main purpose of version control?", options: ["To make code slower", "To track changes and enable collaboration", "To delete old code", "To make code harder to read"], explanation: "Version control tracks changes over time and enables multiple developers to collaborate safely." }, "q5-1-2": { question: "What is a branch in Git?", options: ["A tree component", "A parallel version of the codebase for developing features", "A type of commit", "A GitHub setting"], explanation: "A branch is a parallel version of the codebase that allows you to develop features without affecting the main code." }, "q5-1-3": { question: "What should a good commit message include?", options: ["Random text", "A clear description of what changes were made", "Your personal information", "The current date only"], explanation: "A good commit message clearly describes what changes were made and why." }, "q5-1-4": { question: "What is a pull request?", options: ["A request to delete code", "A request to merge changes from one branch to another", "A request for more features", "A request to download code"], explanation: "A pull request is a request to merge changes from one branch into another, allowing for code review." } } }, "lesson-5-2": { title: "Stripe: Show Me The Money", lessonTitleKey: "lessons.lesson-5-2.title", objective: "Integrate payments with Stripe", content: "# Stripe: Show Me The Money\n\nTime to monetize your masterpiece! Stripe makes accepting payments so easy you could sell bottled water to fish.\n\n## Why Stripe?\n- Industry-leading security\n- Global payment methods\n- Developer-friendly APIs\n- Extensive documentation\n- Flexible pricing models\n\n## Core Concepts:\n- **Payment Intents**: Secure payment processing\n- **Customers**: User management\n- **Subscriptions**: Recurring payments\n- **Webhooks**: Real-time notifications\n- **Products**: What you\'re selling\n\n## Implementation Steps:\n1. Create Stripe account\n2. Set up products and pricing\n3. Implement payment forms\n4. Handle webhooks\n5. Test thoroughly\n\n## Security Best Practices:\n- Use HTTPS everywhere\n- Validate on server-side\n- Handle PCI compliance\n- Secure webhook endpoints\n- Never store card data", learningObjectives: ["Set up Stripe payment processing", "Implement one-time and subscription payments", "Handle webhooks for payment events", "Apply payment security best practices"], badgeName: "Money Maker", srcodeCommentary: "Stripe makes charging so easy you could sell bottled water to fish. But please, don\'t do that", practiceDescription: "Implement a complete payment system with both one-time payments and subscriptions using Stripe.", quizQuestions: { "q5-2-1": { question: "What is a Payment Intent in Stripe?", options: ["A customer\'s wish to buy something", "A secure object that represents your intent to collect payment", "A type of credit card", "A Stripe employee"], explanation: "A Payment Intent is a secure object that tracks the entire payment process from creation to completion." }, "q5-2-2": { question: "Where should you store credit card information?", options: ["In your database", "In local storage", "Never store it - let Stripe handle it", "In cookies"], explanation: "You should never store credit card information yourself - let Stripe handle all sensitive payment data." }, "q5-2-3": { question: "What are webhooks used for in Stripe?", options: ["To catch fish", "To receive real-time notifications about payment events", "To store customer data", "To process refunds"], explanation: "Webhooks notify your application in real-time when payment events occur, like successful payments or failed charges." }, "q5-2-4": { question: "Why is HTTPS required for payment processing?", options: ["It\'s not required", "To encrypt sensitive payment data in transit", "To make the site faster", "For better SEO"], explanation: "HTTPS encrypts all data between the user and your server, protecting sensitive payment information." } } }, "lesson-5-3": { title: "Figma to Code: Pure Magic", lessonTitleKey: "lessons.lesson-5-3.title", objective: "Import designs from Figma", content: "# Figma to Code: Pure Magic\n\nTurning beautiful designs into functional code - it\'s like being a digital wizard!\n\n## What is Figma to Code?\n- Automatic design-to-code conversion\n- Pixel-perfect implementations\n- Responsive design support\n- Component extraction\n- Style generation\n\n## Benefits:\n- Faster development\n- Design consistency\n- Reduced manual coding\n- Better designer-developer collaboration\n- Pixel-perfect results\n\n## Process:\n1. Prepare Figma designs\n2. Use Figma to Code tools\n3. Review generated code\n4. Customize and optimize\n5. Integrate with your app\n\n## Best Practices:\n- Organize Figma layers properly\n- Use consistent naming\n- Create reusable components\n- Test responsive behavior\n- Optimize generated code", learningObjectives: ["Convert Figma designs to functional code", "Optimize generated code for production", "Maintain design consistency", "Implement responsive design patterns"], badgeName: "Design Translator", srcodeCommentary: "Figma to Code is like Google Translate but for designers. And it works better than Google Translate with Spanish üòÇ", practiceDescription: "Convert a complete Figma design to functional React components and integrate them into your application.", quizQuestions: { "q5-3-1": { question: "What is the main benefit of Figma to Code conversion?", options: ["It makes designs look worse", "It speeds up development and ensures design consistency", "It\'s only for mobile apps", "It requires no design skills"], explanation: "Figma to Code conversion speeds up development while maintaining pixel-perfect design consistency." }, "q5-3-2": { question: "What should you do with generated code?", options: ["Use it exactly as generated", "Review, optimize, and customize for your needs", "Delete it immediately", "Never modify generated code"], explanation: "Generated code should be reviewed, optimized, and customized to fit your specific needs and coding standards." }, "q5-3-3": { question: "How should you organize Figma designs for better code generation?", options: ["Randomly name everything", "Use consistent naming and layer organization", "Don\'t organize anything", "Only use text layers"], explanation: "Consistent naming and proper layer organization in Figma leads to better, more maintainable generated code." }, "q5-3-4": { question: "What should you consider when converting designs to code?", options: ["Only desktop versions", "Responsive behavior across all device sizes", "Only mobile versions", "Designs don\'t need to be responsive"], explanation: "You should always consider responsive behavior to ensure your design works well across all device sizes." } } }, "lesson-6-1": { title: "Final Project: Complete App", lessonTitleKey: "lessons.lesson-6-1.title", objective: "Create full-stack app with all integrations", content: "# Final Project: Complete App\n\nThis is your Avengers: Endgame moment! Time to use everything you\'ve learned.\n\n## Project Requirements:\n- Full-stack architecture\n- User authentication\n- Database integration\n- Payment processing\n- Real-time features\n- Professional deployment\n\n## Planning Phase:\n1. Define project scope\n2. Create database schema\n3. Design user flows\n4. Plan feature implementation\n5. Set timeline and milestones\n\n## Implementation Checklist:\n- [ ] User authentication system\n- [ ] Database design and setup\n- [ ] Core feature development\n- [ ] Payment integration\n- [ ] Real-time functionality\n- [ ] Testing and optimization\n- [ ] Production deployment\n\n## Best Practices:\n- Code organization\n- Error handling\n- Performance optimization\n- Security considerations\n- User experience", learningObjectives: ["Apply all learned concepts in a complete project", "Plan and execute a full-stack application", "Implement professional development practices", "Create a portfolio-worthy application"], badgeName: "Vibe Coding Master", srcodeCommentary: "This is your Avengers: Endgame moment. Time to use everything you\'ve learned. Don\'t disappoint me! üöÄ", practiceDescription: "Build a complete full-stack application incorporating all the technologies and concepts from previous lessons.", quizQuestions: { "q6-1-1": { question: "What should you do before starting to code your final project?", options: ["Start coding immediately", "Plan the project scope, database schema, and user flows", "Only think about the design", "Skip planning entirely"], explanation: "Proper planning including scope, database design, and user flows is essential for project success." }, "q6-1-2": { question: "What makes a full-stack application?", options: ["Only frontend code", "Frontend, backend, database, and deployment", "Only database", "Just a pretty design"], explanation: "A full-stack application includes frontend, backend logic, database, and proper deployment." }, "q6-1-3": { question: "Why is testing important in your final project?", options: ["It\'s not important", "To ensure functionality works correctly and catch bugs early", "To make the project take longer", "Only for large companies"], explanation: "Testing ensures your application works correctly and helps catch bugs before users encounter them." }, "q6-1-4": { question: "What should you consider for user experience?", options: ["Only how it looks", "Loading states, error handling, and intuitive navigation", "Just the colors", "UX doesn\'t matter"], explanation: "Good UX includes loading states, proper error handling, intuitive navigation, and responsive design." } } }, "lesson-6-2": { title: "Optimization and Performance", lessonTitleKey: "lessons.lesson-6-2.title", objective: "Optimize application for production", content: "# Optimization and Performance\n\nA slow app is like a poorly told joke - nobody has the patience to wait for the punchline.\n\n## Core Web Vitals:\n- **LCP**: Largest Contentful Paint (loading)\n- **FID**: First Input Delay (interactivity)\n- **CLS**: Cumulative Layout Shift (visual stability)\n\n## Performance Strategies:\n- Code splitting and lazy loading\n- Image optimization\n- Caching strategies\n- Bundle size optimization\n- Database query optimization\n\n## Monitoring Tools:\n- Lighthouse audits\n- Web Vitals extension\n- Performance analytics\n- Real user monitoring\n\n## Implementation:\n1. Audit current performance\n2. Identify bottlenecks\n3. Implement optimizations\n4. Measure improvements\n5. Monitor continuously\n\n## Best Practices:\n- Optimize images and assets\n- Minimize JavaScript bundles\n- Use CDN for static assets\n- Implement proper caching\n- Monitor performance metrics", learningObjectives: ["Understand Core Web Vitals and performance metrics", "Implement performance optimization techniques", "Use performance monitoring tools", "Achieve production-ready performance"], badgeName: "Speed Demon", srcodeCommentary: "A slow app is like a poorly told joke: nobody has the patience to wait for the punchline", practiceDescription: "Optimize your application to achieve a Lighthouse score of 95+ across all metrics.", quizQuestions: { "q6-2-1": { question: "What does LCP measure?", options: ["Loading speed of the largest content element", "Total page load time", "JavaScript execution time", "Database query time"], explanation: "LCP (Largest Contentful Paint) measures how quickly the largest content element becomes visible to users." }, "q6-2-2": { question: "What is code splitting?", options: ["Breaking code into multiple files randomly", "Dividing code into smaller chunks that load when needed", "Deleting unused code", "Making code harder to read"], explanation: "Code splitting divides your application into smaller chunks that are loaded on-demand, reducing initial bundle size." }, "q6-2-3": { question: "Why should you optimize images?", options: ["To make them look worse", "To reduce file size and improve loading speed", "Images don\'t need optimization", "To increase page size"], explanation: "Image optimization reduces file sizes, which improves loading speed and overall performance." }, "q6-2-4": { question: "What should you monitor continuously?", options: ["Only during development", "Performance metrics in production", "Nothing needs monitoring", "Only error rates"], explanation: "Continuous monitoring of performance metrics in production helps identify and address performance issues quickly." } } }, "lesson-6-3": { title: "SrCode Certification", lessonTitleKey: "lessons.lesson-6-3.title", objective: "Final Vibe Coding exam", content: "# SrCode Certification\n\nWelcome to the final boss fight! Time to prove you actually learned something.\n\n## Certification Requirements:\n- Complete all 18 lessons\n- Pass final comprehensive exam (85%+)\n- Demonstrate practical skills\n- Show understanding of core concepts\n- Apply best practices\n\n## Exam Coverage:\n- bolt.new fundamentals\n- Prompt engineering\n- Database design and integration\n- Authentication and security\n- Deployment and optimization\n- Real-world problem solving\n\n## What You\'ll Receive:\n- Official SrCode Certification\n- Digital badge for LinkedIn\n- Portfolio project examples\n- Professional recommendations\n- Community access\n\n## Career Benefits:\n- Validated bolt.new expertise\n- Professional credibility\n- Job opportunities\n- Freelancing capabilities\n- Continued learning path\n\n## Final Words from SrCode:\nYou\'ve come a long way! From not knowing what bolt.new was to building full-stack applications. Whether you pass this exam or not, you\'ve already accomplished something amazing. Now go forth and build something incredible!", learningObjectives: ["Demonstrate mastery of all course concepts", "Apply knowledge to solve complex problems", "Show professional development skills", "Earn official certification"], badgeName: "SrCode Approved", srcodeCommentary: "If you pass this exam, you officially know more than 90% of developers about bolt.new. If not... well, you can always try being an influencer üòè", practiceDescription: "Complete the comprehensive final exam covering all course topics and demonstrate your mastery through a capstone project.", quizQuestions: { "q6-3-1": { question: "What is the most important skill you\'ve learned in this course?", options: ["Memorizing code syntax", "Understanding how to break down problems and build solutions systematically", "Using specific tools only", "Copying code from tutorials"], explanation: "The most valuable skill is learning to break down complex problems and build systematic solutions using modern tools." }, "q6-3-2": { question: "What makes a good bolt.new developer?", options: ["Knowing every feature by heart", "Writing clear prompts, understanding the full stack, and applying best practices", "Only focusing on frontend", "Avoiding databases"], explanation: "A good bolt.new developer combines clear communication, full-stack understanding, and professional best practices." }, "q6-3-3": { question: "How should you approach building a new application?", options: ["Start coding immediately", "Plan thoroughly, build incrementally, test continuously, and deploy confidently", "Only focus on design", "Build everything at once"], explanation: "Professional development involves planning, incremental building, continuous testing, and confident deployment." }, "q6-3-4": { question: "What\'s the secret to continued success as a developer?", options: ["Stop learning after this course", "Keep learning, building, and sharing knowledge with the community", "Only use bolt.new forever", "Avoid new technologies"], explanation: "Continued success comes from lifelong learning, consistent building, and active participation in the developer community." } } } },
    quiz: { title: 'Quiz', question: 'Question {{current}} of {{total}}', backToLesson: 'Back to Lesson', congratulations: 'Congratulations!', keepTrying: 'Keep Trying!', passedMessage: 'You have successfully completed "{{lessonTitle}}" and earned the "{{badgeName}}" badge!', failedMessage: 'You need 85% or higher to pass. You scored {{score}}%. Review the lesson and try again!', badgeEarned: 'üèÜ Badge Earned: {{badgeName}} (+{{xp}} XP)', continueLearning: 'Continue Learning', reviewLesson: 'Review Lesson', retakeQuiz: 'Retake Quiz', bestScore: 'Best Score: {{score}}%', explanation: 'Explanation', loadError: 'Quiz questions could not be loaded.' },
    badges: { title: 'Badge Collection', earned: '{{earned}} of {{total}} badges earned', earnedOn: 'Earned {{date}}', unlockHint: 'Complete Level {{level}} lessons to unlock' },
    certificate: { title: 'Certificate', congratulations: 'Congratulations! üéâ', earned: 'You have completed all 18 lessons and earned your certificate!', download: 'Download Certificate', keepLearning: 'Keep Learning!', progress: 'Complete all 18 lessons to earn your certificate', remaining: '{{count}} lessons remaining', certificateOf: 'CERTIFICATE OF COMPLETION', academyName: 'Vibe Coding Academy', certifies: 'This certifies that', hasCompleted: 'has successfully completed all 18 lessons of the', courseName: 'bolt.new Mastery Course', totalXP: 'Total XP: {{xp}}', completionDate: 'Completion Date: {{date}}', certifiedBy: 'Certified by SrCode', seniorMentor: 'Senior AI Mentor', studentNamePlaceholder: '[Student Name]' },
    srcode: { title: 'SrCode', subtitle: 'AI Mentor', placeholder: 'Ask SrCode anything about this lesson...', thinking: 'SrCode is thinking...', welcomeMessage: 'Hey there! üëã I am SrCode, your AI mentor for "{{lessonTitle}}". Ready to dive into some bolt.new magic? Ask me anything about this lesson!', errorMessage: 'Oops! I am having some technical difficulties. Try again in a moment! üîß', offline: 'I\'m currently offline, but I\'ll be back soon! üíª' }
  },
  es: { /* Spanish translations including common.unexpectedError and profile.* */
    common: { loading: 'Cargando...', error: 'Error', success: '√âxito', cancel: 'Cancelar', save: 'Guardar', delete: 'Eliminar', edit: 'Editar', back: 'Atr√°s', next: 'Siguiente', previous: 'Anterior', continue: 'Continuar', finish: 'Finalizar', retry: 'Reintentar', saving: 'Guardando...', unexpectedError: 'Ocurri√≥ un error inesperado.' },
    profile: { title: "Perfil de Usuario", firstNameLabel: "Nombre", lastNameLabel: "Apellido", saveButton: "Guardar Cambios", errorNoUser: "Usuario no encontrado. No se puede cargar el perfil.", errorFetching: "Error al cargar el perfil: ", errorNoUserSaving: "Usuario no encontrado. No se puede guardar el perfil.", saveSuccess: "¬°Perfil guardado exitosamente!", errorSaving: "Error al guardar el perfil: ", errorLogout: "Fall√≥ el cierre de sesi√≥n: " },
    navigation: { home: 'Inicio', dashboard: 'Panel', lessons: 'Mis Lecciones', badges: 'Insignias', certificate: 'Certificado', profile: 'Perfil', settings: 'Configuraci√≥n', logout: 'Cerrar Sesi√≥n' },
    auth: { login: 'Iniciar Sesi√≥n', signup: 'Registrarse', logout: 'Cerrar Sesi√≥n', email: 'Correo Electr√≥nico', password: 'Contrase√±a', confirmPassword: 'Confirmar Contrase√±a', firstName: 'Nombre', lastName: 'Apellido', welcomeBack: '¬°Bienvenido de vuelta!', joinVibeCoding: '√önete a Vibe Coding', continueJourney: 'Contin√∫a tu viaje de aprendizaje con SrCode', startAdventure: 'Comienza tu aventura de programaci√≥n con IA', forgotPassword: '¬øOlvidaste tu contrase√±a?', noAccount: '¬øNo tienes una cuenta?', haveAccount: '¬øYa tienes una cuenta?', signInInstead: 'Iniciar Sesi√≥n', signUpInstead: 'Registrarse', passwordMinLength: 'La contrase√±a debe tener al menos 8 caracteres', passwordsNoMatch: 'Las contrase√±as no coinciden', emailRequired: 'El correo es requerido', invalidEmail: 'Por favor ingresa un correo v√°lido', checkEmail: '¬°√âxito! Revisa tu correo para confirmar tu cuenta.', backToHome: 'Volver al Inicio' },
    landing: { hero: { title: 'Domina bolt.new con Mentor√≠a IA', subtitle: 'Aprende a construir aplicaciones full-stack con SrCode, tu mentor personal de IA. Desde ingenier√≠a de prompts hasta despliegue: domina el futuro del desarrollo web.', startJourney: 'Comienza tu Viaje', watchDemo: 'Ver Demo', aiPowered: 'Plataforma de Aprendizaje con IA' }, features: { title: '¬øPor qu√© elegir Vibe Coding?', subtitle: 'Experimenta el futuro de la educaci√≥n en programaci√≥n con nuestra plataforma impulsada por IA', aiLearning: { title: 'Aprendizaje con IA', description: 'Aprende con SrCode, tu mentor personal de IA que se adapta a tu ritmo' }, realProjects: { title: 'Construye Proyectos Reales', description: 'Domina bolt.new construyendo aplicaciones reales, no solo teor√≠a' }, certificates: { title: 'Obt√©n Certificados', description: 'Consigue certificados reconocidos por la industria para impulsar tu carrera' } }, stats: { students: 'Estudiantes Entrenados', lessons: 'Lecciones Completas', successRate: 'Tasa de √âxito', support: 'Soporte IA' }, testimonials: { title: 'Historias de √âxito', subtitle: '√önete a miles de desarrolladores que transformaron sus carreras', alex: { name: 'Alex Chen', role: 'Desarrollador Full-Stack', content: 'SrCode me ense√±√≥ bolt.new m√°s r√°pido que cualquier bootcamp. Ahora construyo apps de producci√≥n en d√≠as, no meses.' }, maria: { name: 'Mar√≠a Rodriguez', role: 'Fundadora de Startup', content: 'El mentor IA interactivo es incre√≠ble. Es como tener un desarrollador senior gui√°ndote 24/7.' }, david: { name: 'David Kim', role: 'Product Manager', content: 'De cero a desplegar apps full-stack. La gamificaci√≥n me mantuvo comprometido durante todo el viaje.' } }, cta: { title: '¬øListo para Construir el Futuro?', subtitle: '√önete a la pr√≥xima generaci√≥n de desarrolladores dominando el desarrollo web con IA', startFree: 'Comienza Gratis Hoy', noCreditCard: 'No se requiere tarjeta de cr√©dito' }, footer: { tagline: 'Construyendo el futuro, un desarrollador a la vez.' } },
    dashboard: { title: 'Panel de Control', welcomeBack: '¬°Bienvenido de vuelta, {{name}}!', myLessons: 'Mis Lecciones', badges: 'Insignias', certificate: 'Certificado', stats: { completedLessons: 'Lecciones Completadas', totalXP: 'XP Total', badgesEarned: 'Insignias Ganadas', progress: 'Progreso' }, tabs: { lessons: 'Mis Lecciones', badges: 'Insignias', certificate: 'Certificado' } },
    lessons: { title: 'Lecciones', level: 'Nivel {{level}}', lesson: 'Lecci√≥n {{level}}.{{order}}', objective: 'Objetivo', learningObjectives: 'Objetivos de Aprendizaje', practiceExercise: 'Ejercicio Pr√°ctico', takeQuiz: 'Tomar Quiz', retakeQuiz: 'Repetir Quiz', requiredScore: '{{score}}% requerido para aprobar', readingTime: 'Tiempo de Lectura: ~{{minutes}} min', lessonNotFound: 'Lecci√≥n No Encontrada', lessonNotAvailable: 'Esta lecci√≥n no existe o no est√° disponible.', backToDashboard: 'Volver al Panel', srCodeSays: 'SrCode dice:', levels: { foundations: 'Fundamentos', databases: 'Bases de Datos', authentication: 'Autenticaci√≥n', deployment: 'Despliegue', integrations: 'Integraciones', mastery: 'Maestr√≠a' }, descriptions: { foundations: 'Aprende los fundamentos de bolt.new e ingenier√≠a de prompts', databases: 'Domina la integraci√≥n de Supabase y dise√±o de bases de datos', authentication: 'Implementa sistemas seguros de autenticaci√≥n de usuarios', deployment: 'Despliega tus aplicaciones al mundo', integrations: 'Conecta con servicios externos y APIs', mastery: 'Convi√©rtete en un experto de bolt.new con proyectos avanzados' }, status: { locked: 'Completa la lecci√≥n anterior para desbloquear', available: 'Disponible para comenzar', inProgress: 'En progreso', completed: 'Completado', score: 'Puntuaci√≥n: {{score}}%' }, continueNext: 'üéâ ¬°Felicidades! Completaste "{{currentLessonTitle}}". ¬øQuieres continuar con "{{nextLessonTitle}}"?', nextLessonDefaultTitle: "la siguiente lecci√≥n", "lesson-1-1": { title: "¬øQu√© Demonios es bolt.new?", lessonTitleKey: "lessons.lesson-1-1.title", objective: "Entender bolt.new como un agente de desarrollo web IA", content: "# ¬øQu√© Demonios es bolt.new?\n\n¬°Bienvenido a tu primera lecci√≥n en la Vibe Coding Academy! Soy SrCode, y ser√© tu mentor a lo largo de este viaje.\n\n## ¬øQu√© es bolt.new?\n\nbolt.new es un revolucionario agente de desarrollo web impulsado por IA que te permite construir aplicaciones full-stack usando prompts de lenguaje natural. Piensa en ello como tener un desarrollador senior que:\n\n- Nunca se cansa ni se frustra\n- No necesita pausas para el caf√©\n- Nunca discute sobre est√°ndares de codificaci√≥n\n- Puede construir aplicaciones enteras desde cero\n- Se integra sin problemas con herramientas modernas\n\n## Caracter√≠sticas Clave:\n\n### üöÄ **Desarrollo Impulsado por IA**\nbolt.new utiliza IA avanzada para entender tus requisitos y generar c√≥digo completo y funcional. T√∫ describes lo que quieres, y √©l lo construye.\n\n### üåê **Capacidades Full-Stack**\n- Desarrollo Frontend (React, Vue, Svelte)\n- Integraci√≥n Backend (APIs, bases de datos)\n- Estilizado (CSS, Tailwind, styled-components)\n- Gesti√≥n de estado\n- Sistemas de autenticaci√≥n\n\n### ‚ö° **Despliegue Instant√°neo**\nIntegraci√≥n incorporada con:\n- Netlify para hosting\n- Supabase para bases de datos\n- GitHub para control de versiones\n- Dominios personalizados\n\nRecuerda: La calidad de tu resultado depende de la calidad de tu entrada. Aprender a escribir prompts efectivos es crucial.", learningObjectives: ["Definir qu√© es bolt.new y su prop√≥sito central", "Identificar las principales ventajas sobre el desarrollo tradicional", "Reconocer casos de uso ideales para proyectos con bolt.new", "Entender el flujo de trabajo b√°sico para construir con bolt.new"], badgeName: "Primer Contacto", srcodeCommentary: "bolt.new es como tener un desarrollador senior que nunca se cansa, nunca pide caf√© y nunca discute sobre tabs vs espacios. Incre√≠ble, ¬øverdad?", practiceDescription: "Explora la interfaz de bolt.new e intenta crear un proyecto simple \'Hola Mundo\' para familiarizarte con la plataforma.", quizQuestions: { "q1-1-1": { question: "¬øQu√© es bolt.new?", options: ["Un editor de c√≥digo tradicional", "Un agente de desarrollo web impulsado por IA", "Una herramienta de gesti√≥n de bases de datos", "Un software de dise√±o"], explanation: "bolt.new es un agente de desarrollo web impulsado por IA que te permite construir aplicaciones full-stack usando prompts de lenguaje natural." }, "q1-1-2": { question: "¬øCu√°l es la principal ventaja de usar bolt.new?", options: ["Es completamente gratis", "Solo funciona con JavaScript", "Puede construir aplicaciones a partir de descripciones en lenguaje natural", "Reemplaza todas las dem√°s herramientas de desarrollo"], explanation: "La principal ventaja es que bolt.new puede entender descripciones en lenguaje natural y generar aplicaciones completas y funcionales." }, "q1-1-3": { question: "¬øCu√°l de estas NO es una caracter√≠stica de bolt.new?", options: ["Desarrollo impulsado por IA", "Despliegue instant√°neo", "Configuraci√≥n de hardware f√≠sico", "Capacidades full-stack"], explanation: "bolt.new es completamente basado en web y no requiere ninguna configuraci√≥n de hardware f√≠sico." }, "q1-1-4": { question: "¬øPara qu√© tipo de proyectos es ideal bolt.new?", options: ["Solo aplicaciones m√≥viles", "Aplicaciones web, SaaS, landing pages y e-commerce", "Solo sitios web est√°ticos", "Solo aplicaciones de escritorio"], explanation: "bolt.new es ideal para varios proyectos basados en web, incluyendo aplicaciones SaaS, landing pages, sitios de e-commerce y m√°s." } } }, "lesson-1-2": { title: "El Arte del Prompt Perfecto", lessonTitleKey: "lessons.lesson-1-2.title", objective: "Escribir prompts efectivos para bolt.new", content: "# El Arte del Prompt Perfecto\n\nAhora que sabes qu√© es bolt.new, aprendamos a comunicarnos con √©l eficazmente. Escribir buenos prompts es como ser un gran arquitecto: necesitas ser espec√≠fico, claro y detallado.\n\n## ¬øQu√© Hace un Prompt Perfecto?\n\n### üéØ **La Especificidad es Clave**\nNo digas: \"Hazme un sitio web genial\"\nDi: \"Crea una landing page para una app de fitness con una secci√≥n de h√©roe, tabla de precios, testimonios y formulario de contacto usando un tema oscuro\"\n\n### üìã **Estructura Tus Solicitudes**\nUn buen prompt tiene estos elementos:\n1. **Tipo de Proyecto**: Qu√© est√°s construyendo\n2. **Caracter√≠sticas**: Funcionalidad espec√≠fica necesaria\n3. **Dise√±o**: Preferencias visuales y estilo\n4. **Requisitos T√©cnicos**: Integraciones, frameworks, etc.\n\n## El M√©todo CLEAR:\n- **C**ontexto: Qu√© tipo de proyecto\n- **L**ista: Caracter√≠sticas espec√≠ficas necesarias\n- **E**jemplo: Referencia a proyectos similares\n- **A**specto: Preferencias de dise√±o\n- **R**equisitos: Especificaciones t√©cnicas\n\n## Errores Comunes a Evitar:\n1. **Demasiado Vago**: \"Haz que se vea bien\"\n2. **Demasiado Complejo**: Pedir todo a la vez\n3. **Sin Contexto**: No explicar el prop√≥sito\n4. **Falta de Requisitos**: Olvidar la responsividad m√≥vil\n5. **Prioridades Poco Claras**: No especificar qu√© es lo m√°s importante", learningObjectives: ["Escribir prompts claros y espec√≠ficos para bolt.new", "Entender el m√©todo CLEAR para la estructura de prompts", "Evitar errores comunes al crear prompts", "Usar el prompting iterativo para refinar"], badgeName: "Susurrador de IA", srcodeCommentary: "Un buen prompt es como una receta de cocina: espec√≠fico, claro y sin ingredientes raros. Nada de esa tonter√≠a de \'hazme una app genial\', por favor üôÑ", practiceDescription: "Crea un prompt detallado para una landing page de tu elecci√≥n, luego pru√©balo en bolt.new para ver los resultados.", quizQuestions: { "q1-2-1": { question: "¬øQu√© significa la \'C\' en el m√©todo CLEAR?", options: ["Color", "Contexto", "C√≥digo", "Componentes"], explanation: "En el m√©todo CLEAR, \'C\' significa Contexto: explicar qu√© tipo de proyecto est√°s construyendo." }, "q1-2-2": { question: "¬øCu√°l es un ejemplo de un prompt bien estructurado?", options: ["Hazme una app genial", "Construye algo con React", "Crea un sitio de e-commerce con cat√°logo de productos, carrito de compras e integraci√≥n con Stripe usando un dise√±o moderno", "Necesito un sitio web"], explanation: "Un prompt bien estructurado es espec√≠fico, incluye caracter√≠sticas y menciona requisitos t√©cnicos y preferencias de dise√±o." }, "q1-2-3": { question: "¬øQu√© deber√≠as hacer si tu primer prompt no da resultados perfectos?", options: ["Rendirte y empezar de nuevo", "Usar prompting iterativo para refinar", "Usar siempre el mismo prompt", "Nunca hacer cambios"], explanation: "El prompting iterativo te permite refinar y mejorar tu aplicaci√≥n con solicitudes de seguimiento." }, "q1-2-4": { question: "¬øQu√© elemento NO es esencial en un buen prompt?", options: ["Caracter√≠sticas espec√≠ficas necesarias", "Requisitos t√©cnicos", "Tu historia personal", "Preferencias de dise√±o"], explanation: "La informaci√≥n personal no es relevante para construir aplicaciones; conc√©ntrate en los requisitos del proyecto." } } }, "lesson-1-3": { title: "WebContainers: La Magia Detr√°s del Tel√≥n", lessonTitleKey: "lessons.lesson-1-3.title", objective: "Entender el entorno de desarrollo StackBlitz", content: "# WebContainers: La Magia Detr√°s del Tel√≥n\n\n¬øAlguna vez te has preguntado c√≥mo bolt.new ejecuta un entorno de desarrollo completo en tu navegador? La respuesta es WebContainers, una tecnolog√≠a revolucionaria que lleva Node.js al navegador.\n\n## ¬øQu√© Son los WebContainers?\n\nLos WebContainers son un tiempo de ejecuci√≥n basado en navegador para ejecutar aplicaciones Node.js y comandos del sistema operativo. Piensa en ellos como:\n- Un entorno Node.js completo en tu navegador\n- Sin necesidad de descargas ni instalaciones\n- Acceso completo a la terminal y gesti√≥n de paquetes\n- Capacidades de colaboraci√≥n en tiempo real\n\n## C√≥mo Funcionan los WebContainers:\n\n### üåê **Nativo del Navegador**\n- Se ejecuta completamente en tu navegador usando WebAssembly\n- No se necesita ejecuci√≥n del lado del servidor\n- Tu c√≥digo permanece privado y seguro\n- Funciona sin conexi√≥n una vez cargado\n\n### ‚ö° **Beneficios de Rendimiento**\n- Tiempos de inicio instant√°neos\n- Reemplazo de m√≥dulos en caliente (Hot Module Replacement)\n- Actualizaciones de vista previa en tiempo real\n- Uso eficiente de recursos\n\n### üîí **Caracter√≠sticas de Seguridad**\n- Entorno de ejecuci√≥n aislado (sandboxed)\n- Sin acceso a tu sistema de archivos local\n- Seguro por dise√±o\n- Aislamiento de red\n\n## Ventajas Clave:\n- **Configuraci√≥n Instant√°nea**: Sin configuraci√≥n de entorno\n- **Acceso Universal**: Funciona en cualquier dispositivo con navegador\n- **Eficiencia de Recursos**: Sin uso de almacenamiento local\n- **Listo para Colaborar**: Comparte proyectos con una URL", learningObjectives: ["Entender qu√© son los WebContainers y c√≥mo funcionan", "Navegar eficazmente por el IDE de StackBlitz", "Usar la terminal integrada para tareas de desarrollo", "Reconocer las ventajas y limitaciones del desarrollo basado en navegador"], badgeName: "Detective Tecnol√≥gico", srcodeCommentary: "Los WebContainers son como Docker pero para tu navegador. S√≠, es tan genial como suena. No, no necesitas entender Docker para esto üòâ", practiceDescription: "Explora la interfaz del IDE de StackBlitz, abre la terminal e intenta ejecutar algunos comandos b√°sicos como \'npm --version\' y \'ls\'.", quizQuestions: { "q1-3-1": { question: "¬øQu√© son los WebContainers?", options: ["Contenedores Docker para aplicaciones web", "Un tiempo de ejecuci√≥n basado en navegador para aplicaciones Node.js", "Un tipo de servidor web", "Una tecnolog√≠a de base de datos"], explanation: "Los WebContainers son un tiempo de ejecuci√≥n basado en navegador que permite que las aplicaciones Node.js se ejecuten completamente en el navegador usando WebAssembly." }, "q1-3-2": { question: "¬øCu√°l es una ventaja clave de los WebContainers?", options: ["Requieren instalaci√≥n local", "Solo funcionan en sistemas operativos espec√≠ficos", "Proporcionan configuraci√≥n instant√°nea sin necesidad de descargas", "Son m√°s lentos que el desarrollo tradicional"], explanation: "Los WebContainers proporcionan configuraci√≥n instant√°nea sin necesidad de descargas ni instalaciones, haciendo el desarrollo accesible inmediatamente." }, "q1-3-3": { question: "¬øC√≥mo instalas paquetes en un WebContainer?", options: ["Descarg√°ndolos manualmente", "Usando npm o yarn en la terminal integrada", "Subiendo archivos directamente", "Los WebContainers no soportan paquetes"], explanation: "Puedes instalar paquetes usando comandos npm o yarn en la terminal integrada, igual que en el desarrollo tradicional." }, "q1-3-4": { question: "¬øQu√© impulsa la ejecuci√≥n de Node.js en los WebContainers?", options: ["Procesamiento del lado del servidor", "Sistema de archivos local", "WebAssembly", "Plugins del navegador"], explanation: "Los WebContainers usan WebAssembly para ejecutar aplicaciones Node.js completamente en el navegador sin procesamiento del lado del servidor." } } }, "lesson-2-1": { title: "Conectando Supabase Como un Profesional", lessonTitleKey: "lessons.lesson-2-1.title", objective: "Configurar Supabase en bolt.new paso a paso", content: "# Conectando Supabase Como un Profesional\n\n¬°Bienvenido al Nivel 2! Ahora nos adentramos en el meollo del desarrollo web moderno. Supabase ser√° tu nuevo mejor amigo; pi√©nsalo como Firebase, pero realmente amigable para el desarrollador.\n\n## ¬øQu√© es Supabase?\n\nSupabase es un Backend-como-Servicio (BaaS) de c√≥digo abierto que provee:\n- **Base de Datos PostgreSQL**: SQL real, no alguna tonter√≠a NoSQL\n- **Autenticaci√≥n**: Gesti√≥n de usuarios incorporada\n- **Suscripciones en Tiempo Real**: Actualizaciones de datos en vivo\n- **Edge Functions**: Funciones serverless en el borde\n- **Almacenamiento**: Manejo de archivos e im√°genes\n- **APIs Auto-generadas**: RESTful y GraphQL\n\n## Proceso de Conexi√≥n Paso a Paso:\n\n### **Paso 1: Crea Tu Proyecto Supabase**\n1. Ve a supabase.com\n2. Reg√≠strate o inicia sesi√≥n\n3. Haz clic en \"Nuevo Proyecto\"\n4. Elige tu organizaci√≥n\n5. Completa los detalles del proyecto\n6. Haz clic en \"Crear nuevo proyecto\"\n\n### **Paso 2: Obt√©n Tus Credenciales de Proyecto**\n1. Ve a Configuraci√≥n ‚Üí API\n2. Copia la URL del Proyecto y la Clave An√≥nima (Anon Key)\n\n### **Paso 3: Conecta en bolt.new**\n1. En tu proyecto, ve a integraciones\n2. Selecciona \"Supabase\"\n3. Ingresa tus credenciales\n4. Prueba la conexi√≥n\n\n## Mejores Pr√°cticas:\n- Nunca expongas claves de rol de servicio (service role keys) en el c√≥digo frontend\n- Usa pol√≠ticas de Seguridad a Nivel de Fila (RLS)\n- Valida los datos tanto en el lado del cliente como del servidor\n- Usa variables de entorno para las credenciales", learningObjectives: ["Crear y configurar un proyecto de Supabase", "Conectar Supabase a bolt.new exitosamente", "Entender las variables de entorno y la seguridad", "Solucionar problemas comunes de conexi√≥n"], badgeName: "Conector Supremo", srcodeCommentary: "Configuraci√≥n > Aplicaciones > Conectar. M√°s f√°cil que armar muebles de IKEA... y con menos l√°grimas", practiceDescription: "Crea tu propio proyecto de Supabase y con√©ctalo exitosamente a un nuevo proyecto de bolt.new.", quizQuestions: { "q2-1-1": { question: "¬øCu√°l es el primer paso para conectar Supabase a bolt.new?", options: ["Escribir consultas de base de datos", "Crear un proyecto de Supabase y obtener las credenciales", "Instalar la CLI de Supabase", "Configurar la autenticaci√≥n"], explanation: "Primero debes crear un proyecto de Supabase y obtener la URL de tu proyecto y las claves API antes de conectar." }, "q2-1-2": { question: "¬øQu√© clave de Supabase deber√≠as usar en el c√≥digo frontend?", options: ["Clave de Rol de Servicio", "Clave Secreta", "Clave An√≥nima (Anon Key)", "Clave Maestra"], explanation: "La Clave An√≥nima (Anon Key) es segura para usar en el c√≥digo frontend ya que respeta las pol√≠ticas de Seguridad a Nivel de Fila." }, "q2-1-3": { question: "¬øD√≥nde deber√≠as almacenar tus credenciales de Supabase por seguridad?", options: ["Directamente en el c√≥digo", "En comentarios", "En variables de entorno", "En un archivo p√∫blico"], explanation: "Las variables de entorno mantienen tus credenciales seguras y separadas de tu base de c√≥digo." }, "q2-1-4": { question: "¬øQu√© significa RLS en Supabase?", options: ["Transmisi√≥n en Vivo Real", "Seguridad a Nivel de Fila (Row Level Security)", "Sistema de Carga R√°pida", "Servicio de Inicio de Sesi√≥n Remoto"], explanation: "La Seguridad a Nivel de Fila (RLS) asegura que los usuarios solo puedan acceder a los datos que est√°n autorizados a ver." } } }, "lesson-2-2": { title: "Esquemas de Base de Datos: Tu Nuevo Mejor Amigo", lessonTitleKey: "lessons.lesson-2-2.title", objective: "Dise√±ar esquemas de base de datos efectivos", content: "# Esquemas de Base de Datos: Tu Nuevo Mejor Amigo\n\nHablemos de la base de cualquier gran aplicaci√≥n: el esquema de la base de datos. Pi√©nsalo como el plano de tu mansi√≥n de datos.\n\n## ¬øQu√© es un Esquema de Base de Datos?\n\nUn esquema de base de datos es la estructura que define:\n- **Tablas**: Donde viven tus datos\n- **Columnas**: Qu√© datos almacenas\n- **Relaciones**: C√≥mo se conectan los datos\n- **Restricciones**: Reglas que tus datos deben seguir\n- **√çndices**: C√≥mo encontrar datos r√°pidamente\n\n## Principios Fundamentales de Dise√±o de Esquemas:\n\n### üéØ **Normalizaci√≥n (Pero No Demasiada)**\n- Elimina datos duplicados\n- Crea relaciones l√≥gicas\n- No normalices en exceso (a veces la duplicaci√≥n est√° bien)\n\n### üîó **Las Relaciones Importan**\n- **Uno a Uno**: Usuario ‚Üí Perfil\n- **Uno a Muchos**: Usuario ‚Üí Publicaciones\n- **Muchos a Muchos**: Usuarios ‚Üî Roles\n\n### üìù **Los Tipos de Datos Son Importantes**\n- Usa el tipo correcto para el trabajo\n- Considera el almacenamiento y el rendimiento\n- Planifica el crecimiento futuro\n\n## Conceptos Clave de Esquemas:\n\n### **Claves Primarias**\n- Identificador √∫nico para cada fila\n- Usa UUID para una mejor distribuci√≥n\n- Nunca cambies ni reutilices\n\n### **Claves For√°neas**\n- Unen tablas\n- Refuerzan la integridad referencial\n- Definen el comportamiento en cascada\n\n### **Restricciones**\n- CHECK: Valida los valores de los datos\n- UNIQUE: Previene duplicados\n- NOT NULL: Requiere valores", learningObjectives: ["Dise√±ar esquemas de base de datos eficientes", "Entender las relaciones y restricciones de las tablas", "Implementar Seguridad a Nivel de Fila en Supabase", "Aplicar mejores pr√°cticas de dise√±o de esquemas"], badgeName: "Arquitecto de Datos", srcodeCommentary: "Un buen esquema es como una casa bien cimentada. Sin √©l, todo se derrumba m√°s r√°pido que mis dietas de enero.", practiceDescription: "Dise√±a un esquema para una aplicaci√≥n de blog con usuarios, publicaciones, comentarios y categor√≠as.", quizQuestions: { "q2-2-1": { question: "¬øQu√© es un esquema de base de datos?", options: ["Un tipo de base de datos", "La estructura que define tablas, columnas y relaciones", "Un lenguaje de consulta", "Un sistema de respaldo"], explanation: "Un esquema de base de datos es la estructura que define c√≥mo se organizan los datos, incluyendo tablas, columnas, relaciones y restricciones." }, "q2-2-2": { question: "¬øQu√© tipo de relaci√≥n conecta Usuarios con Publicaciones donde cada usuario puede tener muchas publicaciones?", options: ["Uno a Uno", "Uno a Muchos", "Muchos a Muchos", "Muchos a Uno"], explanation: "La relaci√≥n Uno a Muchos permite que un usuario tenga m√∫ltiples publicaciones, pero cada publicaci√≥n pertenece a un solo usuario." }, "q2-2-3": { question: "¬øQu√© significa RLS en Supabase?", options: ["Transmisi√≥n en Vivo en Tiempo Real", "Seguridad a Nivel de Fila (Row Level Security)", "Sistema L√≥gico Relacional", "Servicio de Inicio de Sesi√≥n Remoto"], explanation: "La Seguridad a Nivel de Fila (RLS) controla qu√© usuarios pueden acceder a qu√© filas en una tabla bas√°ndose en pol√≠ticas." }, "q2-2-4": { question: "¬øPor qu√© deber√≠as usar UUID para las claves primarias?", options: ["Son m√°s peque√±os que los enteros", "Proporcionan una mejor distribuci√≥n y evitan conflictos", "Son m√°s f√°ciles de recordar", "Son requeridos por Supabase"], explanation: "Los UUID proporcionan una mejor distribuci√≥n entre sistemas y evitan conflictos al fusionar datos de diferentes fuentes." } } }, "lesson-2-3": { title: "Edge Functions: Poder Ilimitado", lessonTitleKey: "lessons.lesson-2-3.title", objective: "Crear y gestionar Edge Functions", content: "# Edge Functions: Poder Ilimitado\n\n¬°Bienvenido al lado poderoso de Supabase! Las Edge Functions son como tener superpoderes para tu backend.\n\n## ¬øQu√© Son las Edge Functions?\n\nLas Edge Functions son funciones serverless que se ejecutan en la red global de borde de Supabase. Pi√©nsalas como:\n- **Mini servidores** que ejecutan tu l√≥gica personalizada\n- **Endpoints de API** que puedes personalizar completamente\n- **Manejadores de eventos** que responden a cambios en la base de datos\n- **Procesadores de datos** que transforman informaci√≥n\n\n## Por Qu√© las Edge Functions Son Geniales:\n\n### ‚ö° **Rendimiento**\n- Se ejecutan cerca de tus usuarios en todo el mundo\n- Tiempos de respuesta inferiores a 100 ms\n- Escalado autom√°tico seg√∫n la demanda\n\n### üîí **Seguridad**\n- Ejecuci√≥n del lado del servidor (los secretos permanecen secretos)\n- Contexto de autenticaci√≥n incorporado\n- Integraci√≥n con Seguridad a Nivel de Fila\n\n### üõ†Ô∏è **Flexibilidad**\n- Usa cualquier c√≥digo JavaScript/TypeScript\n- Acceso al ecosistema completo de Node.js\n- Implementaci√≥n de l√≥gica de negocio personalizada\n\n## Casos de Uso Comunes:\n\n### **1. Integraciones de API**\n- Procesamiento de pagos con Stripe\n- Env√≠o de correos electr√≥nicos con SendGrid\n- Integraciones con redes sociales\n- Llamadas a API de terceros\n\n### **2. Procesamiento de Datos**\n- Redimensionamiento y optimizaci√≥n de im√°genes\n- Validaci√≥n y sanitizaci√≥n de datos\n- C√°lculos complejos\n- Generaci√≥n de informes\n\n### **3. Webhooks**\n- Confirmaciones de pago\n- Notificaciones a usuarios\n- Sincronizaci√≥n de datos\n- Actualizaciones en tiempo real\n\n### **4. L√≥gica de Autenticaci√≥n**\n- Autenticaci√≥n multifactor\n- Validaci√≥n de usuarios personalizada\n- Permisos basados en roles\n- OAuth de terceros", learningObjectives: ["Entender qu√© son las Edge Functions y sus beneficios", "Crear y desplegar Edge Functions en Supabase", "Implementar casos de uso comunes como integraciones de API", "Aplicar mejores pr√°cticas de seguridad para funciones serverless"], badgeName: "Se√±or del Borde", srcodeCommentary: "Las Edge Functions son como tener superpoderes. √ösalos sabiamente, joven Padawan üåü", practiceDescription: "Crea una Edge Function que valide direcciones de correo electr√≥nico y verifique si provienen de servicios de correo desechable.", quizQuestions: { "q2-3-1": { question: "¬øQu√© son las Edge Functions?", options: ["Consultas de base de datos que se ejecutan m√°s r√°pido", "Funciones serverless que se ejecutan en la red global de borde de Supabase", "Componentes frontend", "Funciones de estilo CSS"], explanation: "Las Edge Functions son funciones serverless que se ejecutan en la red global de borde de Supabase, proporcionando l√≥gica de backend r√°pida y escalable." }, "q2-3-2": { question: "¬øCu√°ndo deber√≠as usar Edge Functions en lugar de rutas API?", options: ["Siempre usar Edge Functions", "Cuando necesitas l√≥gica del lado del servidor, llamadas a API externas o autenticaci√≥n personalizada", "Solo para operaciones de base de datos", "Nunca usar Edge Functions"], explanation: "Las Edge Functions son ideales para l√≥gica del lado del servidor, integraciones de API externas, procesamiento de pagos y cualquier l√≥gica que requiera secretos." }, "q2-3-3": { question: "¬øC√≥mo manejas los errores en las Edge Functions?", options: ["Ignor√°ndolos", "Usando bloques try-catch y devolviendo respuestas de error apropiadas", "Dejando que la funci√≥n falle", "Solo registr√°ndolos en la consola"], explanation: "El manejo adecuado de errores con bloques try-catch y respuestas de error significativas asegura funciones robustas." }, "q2-3-4": { question: "¬øD√≥nde deber√≠as almacenar las claves API en las Edge Functions?", options: ["Directamente en el c√≥digo", "En comentarios", "En variables de entorno", "En el nombre de la funci√≥n"], explanation: "Las variables de entorno mantienen tus claves API y secretos seguros y separados de tu c√≥digo." } } }, "lesson-3-1": { title: "Fundamentos de Autenticaci√≥n: ¬øQui√©n Eres?", lessonTitleKey: "lessons.lesson-3-1.title", objective: "Implementar inicio de sesi√≥n/registro b√°sicos", content: "# Fundamentos de Autenticaci√≥n: ¬øQui√©n Eres?\n\nLa autenticaci√≥n consiste en verificar qui√©n dice ser alguien. Es como revisar la identificaci√≥n en la puerta.\n\n## Autenticaci√≥n vs Autorizaci√≥n\n- **Autenticaci√≥n**: ¬øQui√©n eres? (Inicio de sesi√≥n)\n- **Autorizaci√≥n**: ¬øQu√© puedes hacer? (Permisos)\n\n## Caracter√≠sticas de Supabase Auth:\n- Autenticaci√≥n con correo/contrase√±a\n- Inicio de sesi√≥n social (Google, GitHub, etc.)\n- Enlaces m√°gicos (sin contrase√±a)\n- Tokens JWT para sesiones\n- Integraci√≥n con Seguridad a Nivel de Fila\n\n## Implementaci√≥n B√°sica:\n1. Configura Supabase Auth\n2. Crea funciones de registro/inicio de sesi√≥n\n3. Maneja los cambios de estado de autenticaci√≥n\n4. Implementa un manejo de errores adecuado\n\n## Mejores Pr√°cticas:\n- Valida el formato del correo electr√≥nico\n- Exige contrase√±as seguras\n- Usa HTTPS en todas partes\n- Maneja los casos extremos adecuadamente", learningObjectives: ["Entender los conceptos y la terminolog√≠a de la autenticaci√≥n", "Implementar el registro e inicio de sesi√≥n de usuarios con Supabase", "Crear formularios de autenticaci√≥n con validaci√≥n adecuada", "Gestionar el estado de autenticaci√≥n en aplicaciones React"], badgeName: "Guardi√°n Digital", srcodeCommentary: "Supabase Auth es tan f√°cil que hasta yo podr√≠a hacerlo... y soy una IA sin dedos ü§ñ", practiceDescription: "Construye un sistema de autenticaci√≥n completo con funcionalidades de registro, inicio de sesi√≥n y cierre de sesi√≥n.", quizQuestions: { "q3-1-1": { question: "¬øCu√°l es la diferencia entre autenticaci√≥n y autorizaci√≥n?", options: ["Son lo mismo", "La autenticaci√≥n verifica la identidad, la autorizaci√≥n determina los permisos", "La autorizaci√≥n verifica la identidad, la autenticaci√≥n determina los permisos", "No hay diferencia"], explanation: "La autenticaci√≥n responde \'¬øqui√©n eres?\' mientras que la autorizaci√≥n responde \'¬øqu√© puedes hacer?\'" }, "q3-1-2": { question: "¬øC√≥mo maneja Supabase la seguridad de las contrase√±as?", options: ["Las contrase√±as se almacenan en texto plano", "Las contrase√±as se hashean y aseguran autom√°ticamente", "Los usuarios deben hashear sus propias contrase√±as", "Las contrase√±as se cifran con un algoritmo simple"], explanation: "Supabase maneja autom√°ticamente el hasheo de contrase√±as utilizando algoritmos est√°ndar de la industria." }, "q3-1-3": { question: "¬øQu√© deber√≠as validar cuando un usuario se registra?", options: ["Solo el formato del correo electr√≥nico", "Solo la fortaleza de la contrase√±a", "El formato del correo, la fortaleza de la contrase√±a y que las contrase√±as coincidan", "Nada - conf√≠a en el usuario"], explanation: "Una validaci√≥n adecuada incluye el formato del correo electr√≥nico, los requisitos de fortaleza de la contrase√±a y la confirmaci√≥n de la contrase√±a." }, "q3-1-4": { question: "¬øC√≥mo escuchas los cambios de estado de autenticaci√≥n en Supabase?", options: ["Verificando manualmente cada segundo", "Usando supabase.auth.onAuthStateChange()", "Refrescando la p√°gina", "El estado de autenticaci√≥n nunca cambia"], explanation: "supabase.auth.onAuthStateChange() proporciona actualizaciones en tiempo real cuando cambia el estado de autenticaci√≥n." } } }, "lesson-3-2": { title: "Protegiendo Rutas Como Fort Knox", lessonTitleKey: "lessons.lesson-3-2.title", objective: "Middleware y protecci√≥n de rutas", content: "# Protegiendo Rutas Como Fort Knox\n\nLa protecci√≥n de rutas asegura que solo los usuarios autorizados accedan al contenido protegido.\n\n## Tipos de Rutas Protegidas:\n- **Requiere Autenticaci√≥n**: Panel de control, perfil\n- **Acceso Basado en Roles**: Paneles de administrador, herramientas de moderador\n- **Acceso Condicional**: Funciones de suscripci√≥n\n\n## Patrones de Implementaci√≥n:\n1. Componente de Ruta Protegida\n2. Guardias de ruta basados en roles\n3. Protecci√≥n basada en suscripci√≥n\n4. Seguridad a Nivel de Fila (RLS)\n\n## Mejores Pr√°cticas:\n- Valida tanto en el cliente como en el servidor\n- Muestra estados de carga durante las verificaciones de autenticaci√≥n\n- Proporciona mensajes de error claros\n- Usa RLS para protecci√≥n a nivel de base de datos\n\n## Pruebas:\n- Prueba con diferentes tipos de usuarios\n- Prueba sesiones expiradas\n- Prueba casos extremos", learningObjectives: ["Implementar protecci√≥n de rutas basada en autenticaci√≥n", "Crear sistemas de control de acceso basados en roles", "Usar eficazmente los guardias de React Router", "Aplicar Seguridad a Nivel de Fila para la protecci√≥n de datos"], badgeName: "Vigilante Nocturno", srcodeCommentary: "Una ruta desprotegida es como dejar la puerta abierta con un cartel de \'entrada libre\'. Spoiler: nadie respeta esos carteles.", practiceDescription: "Crea un sistema de protecci√≥n de rutas multinivel con diferentes niveles de acceso.", quizQuestions: { "q3-2-1": { question: "¬øCu√°l es el prop√≥sito de la protecci√≥n de rutas?", options: ["Hacer la aplicaci√≥n m√°s r√°pida", "Asegurar que solo los usuarios autorizados puedan acceder a ciertas p√°ginas", "Mejorar el SEO", "Reducir el tama√±o del paquete"], explanation: "La protecci√≥n de rutas asegura que solo los usuarios autenticados y autorizados puedan acceder a las p√°ginas protegidas." }, "q3-2-2": { question: "¬øQu√© deber√≠as hacer mientras se verifica el estado de autenticaci√≥n?", options: ["Mostrar un mensaje de error", "Redirigir inmediatamente", "Mostrar un estado de carga", "Ocultar toda la p√°gina"], explanation: "Deber√≠as mostrar un estado de carga mientras se verifica la autenticaci√≥n para proporcionar una buena experiencia de usuario." }, "q3-2-3": { question: "¬øQu√© es la Seguridad a Nivel de Fila (RLS)?", options: ["Protecci√≥n de rutas del lado del cliente", "Seguridad a nivel de base de datos que controla a qu√© filas pueden acceder los usuarios", "Un componente de React", "Un tipo de autenticaci√≥n"], explanation: "La Seguridad a Nivel de Fila (RLS) es una caracter√≠stica de la base de datos que controla qu√© filas pueden ver y modificar los usuarios." }, "q3-2-4": { question: "¬øPor qu√© deber√≠as validar los permisos tanto en el cliente como en el servidor?", options: ["No es necesario", "Del lado del cliente para UX, del lado del servidor para seguridad", "Solo importa la validaci√≥n del lado del servidor", "Solo se necesita validaci√≥n del lado del cliente"], explanation: "La validaci√≥n del lado del cliente proporciona retroalimentaci√≥n inmediata, mientras que la validaci√≥n del lado del servidor garantiza la seguridad." } } }, "lesson-3-3": { title: "Autenticaci√≥n Social: La V√≠a F√°cil", lessonTitleKey: "lessons.lesson-3-3.title", objective: "Implementar inicio de sesi√≥n con Google/GitHub", content: "# Autenticaci√≥n Social: La V√≠a F√°cil\n\n¬øPor qu√© hacer que los usuarios recuerden otra contrase√±a cuando pueden simplemente hacer clic en \'Iniciar sesi√≥n con Google\'?\n\n## Beneficios de la Autenticaci√≥n Social:\n- Sin nueva contrase√±a que recordar\n- Proceso de registro m√°s r√°pido\n- Proveedor de autenticaci√≥n de confianza\n- Mayores tasas de conversi√≥n\n\n## Pasos de Implementaci√≥n:\n1. Configura proveedores OAuth (Google, GitHub)\n2. Configura la autenticaci√≥n social de Supabase\n3. Implementa botones de inicio de sesi√≥n social\n4. Maneja los datos del perfil del usuario\n5. Gestiona la vinculaci√≥n de cuentas\n\n## Consideraciones de Seguridad:\n- Valida las URL de redirecci√≥n\n- Usa HTTPS en producci√≥n\n- Maneja adecuadamente los conflictos de correo electr√≥nico\n- Almacena datos m√≠nimos del usuario\n\n## Mejores Pr√°cticas:\n- Proporciona mensajes de error claros\n- Maneja los bloqueadores de ventanas emergentes\n- Prueba con diferentes proveedores\n- Monitorea las tasas de conversi√≥n", learningObjectives: ["Implementar autenticaci√≥n social con Google y GitHub", "Manejar datos de autenticaci√≥n social y perfiles de usuario", "Gestionar m√∫ltiples cuentas vinculadas por usuario", "Aplicar mejores pr√°cticas de seguridad para la autenticaci√≥n social"], badgeName: "Mariposa Social", srcodeCommentary: "¬øPor qu√© recordar otra contrase√±a cuando Google ya sabe todo sobre ti? Abraza la comodidad üòé", practiceDescription: "Implementa un sistema completo de autenticaci√≥n social con Google y GitHub.", quizQuestions: { "q3-3-1": { question: "¬øCu√°l es el principal beneficio de la autenticaci√≥n social para los usuarios?", options: ["Es m√°s segura que las contrase√±as", "No necesitan crear y recordar otra contrase√±a", "Es m√°s r√°pida de implementar", "Funciona sin conexi√≥n"], explanation: "La autenticaci√≥n social elimina la necesidad de que los usuarios creen y recuerden otra contrase√±a." }, "q3-3-2": { question: "¬øD√≥nde configuras las URI de redirecci√≥n OAuth?", options: ["En tu c√≥digo frontend", "En la base de datos de Supabase", "En la consola de desarrollador del proveedor", "En tu package.json"], explanation: "Las URI de redirecci√≥n OAuth deben configurarse en la consola de desarrollador de cada proveedor por seguridad." }, "q3-3-3": { question: "¬øC√≥mo manejas m√∫ltiples cuentas sociales para un usuario?", options: ["Creando cuentas de usuario separadas", "Usando la vinculaci√≥n de cuentas para conectar m√∫ltiples proveedores a un usuario", "Permitiendo solo un proveedor por usuario", "Fusionando cuentas autom√°ticamente"], explanation: "La vinculaci√≥n de cuentas permite a los usuarios conectar m√∫ltiples proveedores sociales a una √∫nica cuenta de usuario." }, "q3-3-4": { question: "¬øQu√© deber√≠as hacer cuando ocurren conflictos de correo electr√≥nico?", options: ["Crear una cuenta duplicada", "Rechazar el registro completamente", "Sugerir vincular la cuenta o iniciar sesi√≥n con el proveedor original", "Eliminar la cuenta existente"], explanation: "Cuando ocurren conflictos de correo electr√≥nico, gu√≠a a los usuarios para que vinculen su cuenta o inicien sesi√≥n con su m√©todo original." } } }, "lesson-4-1": { title: "Netlify: Tu Mejor Amigo para el Despliegue", lessonTitleKey: "lessons.lesson-4-1.title", objective: "Desplegar usando la integraci√≥n de Netlify", content: "# Netlify: Tu Mejor Amigo para el Despliegue\n\n¬°Es hora de desplegar tu creaci√≥n al mundo! Netlify hace que el despliegue sea m√°gico.\n\n## ¬øQu√© es Netlify?\n- Hosting de Sitios Est√°ticos con CDN global\n- Funciones Serverless\n- Despliegue Continuo\n- Manejo de Formularios\n- Pruebas A/B (Split Testing)\n\n## Proceso de Despliegue:\n1. Prepara tu proyecto (scripts de compilaci√≥n, variables de entorno)\n2. Despliega desde bolt.new (un clic)\n3. Configura variables de entorno\n4. Configura un dominio personalizado\n5. Monitorea el rendimiento\n\n## Consejos de Optimizaci√≥n:\n- Carga diferida (Lazy load) de componentes\n- Optimiza im√°genes\n- Usa divisi√≥n de c√≥digo (code splitting)\n- Habilita la compresi√≥n\n- Configura un almacenamiento en cach√© adecuado\n\n## Mejores Pr√°cticas:\n- Usa variables de entorno\n- Configura redirecciones para SPA\n- Monitorea los registros de compilaci√≥n\n- Prueba la versi√≥n desplegada", learningObjectives: ["Desplegar aplicaciones en Netlify desde bolt.new", "Configurar variables de entorno para producci√≥n", "Optimizar aplicaciones para el despliegue en producci√≥n", "Solucionar problemas comunes de despliegue"], badgeName: "Lanzador Espacial", srcodeCommentary: "Netlify + bolt.new es como Batman y Robin, pero para el despliegue. Y s√≠, t√∫ eres Robin en esta analog√≠a ü¶∏‚Äç‚ôÇÔ∏è", practiceDescription: "Despliega una aplicaci√≥n completa en Netlify con la configuraci√≥n adecuada de variables de entorno.", quizQuestions: { "q4-1-1": { question: "¬øCu√°l es el comando de compilaci√≥n correcto para un proyecto Vite en Netlify?", options: ["npm start", "npm run build", "npm run dev", "vite build"], explanation: "El comando de compilaci√≥n \'npm run build\' ejecuta el script de compilaci√≥n definido en package.json." }, "q4-1-2": { question: "¬øD√≥nde se deben configurar las variables de entorno para producci√≥n?", options: ["En el c√≥digo fuente", "En el archivo .env confirmado en Git", "En la secci√≥n de variables de entorno de Netlify", "En package.json"], explanation: "Las variables de entorno deben configurarse en el panel de Netlify por seguridad." }, "q4-1-3": { question: "¬øQu√© regla de redirecci√≥n es esencial para las SPA (Aplicaciones de P√°gina √önica)?", options: ["/api/* /backend/:splat 200", "/* /index.html 200", "/old /new 301", "/404 /error 200"], explanation: "La redirecci√≥n \'/* /index.html 200\' asegura que todas las rutas sean manejadas por el enrutamiento del lado del cliente de la SPA." }, "q4-1-4": { question: "¬øC√≥mo optimizas una aplicaci√≥n React para producci√≥n?", options: ["Simplemente ejecutar npm run build", "Usar carga diferida, divisi√≥n de c√≥digo y eliminar console.logs", "Solo minificar el c√≥digo", "La optimizaci√≥n no es necesaria"], explanation: "La optimizaci√≥n para producci√≥n incluye carga diferida, divisi√≥n de c√≥digo y eliminaci√≥n de c√≥digo de desarrollo." } } }, "lesson-4-2": { title: "Dominios Personalizados: Tu Marca Personal", lessonTitleKey: "lessons.lesson-4-2.title", objective: "Configurar dominios personalizados", content: "# Dominios Personalizados: Tu Marca Personal\n\n¬°Es hora de darle a tu aplicaci√≥n una direcci√≥n profesional!\n\n## Por Qu√© Importan los Dominios Personalizados:\n- Apariencia profesional\n- Reconocimiento de marca\n- Mejor SEO\n- Confianza del usuario\n- M√°s f√°cil de recordar\n\n## Proceso de Configuraci√≥n:\n1. Compra un dominio\n2. Configura los ajustes de DNS\n3. Agrega el dominio a Netlify\n4. Verifica el certificado SSL\n5. Prueba todo\n\n## Configuraci√≥n de DNS:\n- Registro A: Apunta al balanceador de carga de Netlify\n- CNAME: Apunta el subdominio a Netlify\n- SSL: Autom√°tico con Let\'s Encrypt\n\n## Mejores Pr√°cticas:\n- Usa HTTPS en todas partes\n- Configura redirecciones www\n- Monitorea los certificados SSL\n- Prueba desde diferentes ubicaciones", learningObjectives: ["Comprar y configurar dominios personalizados", "Configurar correctamente los registros DNS", "Verificar certificados SSL", "Implementar mejores pr√°cticas de dominio"], badgeName: "Se√±or de los Dominios", srcodeCommentary: "Un dominio personalizado es como tener una direcci√≥n elegante. No m√°s \'mi-app-aleatoria-123.netlify.app\'", practiceDescription: "Configura un dominio personalizado para tu aplicaci√≥n desplegada con la configuraci√≥n DNS adecuada.", quizQuestions: { "q4-2-1": { question: "¬øQu√© tipo de registro DNS deber√≠as usar para apuntar tu dominio ra√≠z a Netlify?", options: ["CNAME", "Registro A", "Registro MX", "Registro TXT"], explanation: "Se utiliza un Registro A para apuntar el dominio ra√≠z a la direcci√≥n IP de Netlify." }, "q4-2-2": { question: "¬øC√≥mo maneja Netlify los certificados SSL?", options: ["Debes comprarlos por separado", "SSL autom√°tico con Let\'s Encrypt", "SSL no es compatible", "Solo los planes de pago obtienen SSL"], explanation: "Netlify proporciona autom√°ticamente certificados SSL usando Let\'s Encrypt para todos los sitios." }, "q4-2-3": { question: "¬øQu√© deber√≠as hacer con el subdominio www?", options: ["Ignorarlo completamente", "Configurar una redirecci√≥n a tu dominio principal", "Usarlo como dominio primario", "Eliminar el registro www"], explanation: "Es una mejor pr√°ctica configurar una redirecci√≥n de www a tu dominio principal (o viceversa) por consistencia." }, "q4-2-4": { question: "¬øCu√°nto tiempo tarda t√≠picamente la propagaci√≥n de DNS?", options: ["Inmediatamente", "Hasta 48 horas", "Exactamente 24 horas", "Una semana"], explanation: "La propagaci√≥n de DNS puede tardar hasta 48 horas en completarse en todo el mundo, aunque a menudo es m√°s r√°pida." } } }, "lesson-4-3": { title: "CI/CD: El Futuro es Ahora", lessonTitleKey: "lessons.lesson-4-3.title", objective: "Configurar despliegues autom√°ticos con GitHub", content: "# CI/CD: El Futuro es Ahora\n\nIntegraci√≥n Continua y Despliegue Continuo: ¬°tu mayordomo de despliegue personal!\n\n## ¬øQu√© es CI/CD?\n- **CI**: Integraci√≥n Continua (pruebas automatizadas)\n- **CD**: Despliegue Continuo (despliegue automatizado)\n- Enviar c√≥digo ‚Üí Ejecutar pruebas ‚Üí Desplegar autom√°ticamente\n\n## Beneficios:\n- Ciclos de desarrollo m√°s r√°pidos\n- Reducci√≥n de errores humanos\n- Despliegues consistentes\n- Pruebas autom√°ticas\n- Retrocesos (Rollbacks) f√°ciles\n\n## Configuraci√≥n de GitHub Actions:\n1. Conecta el repositorio de GitHub\n2. Configura los disparadores (triggers) de compilaci√≥n\n3. Configura el pipeline de pruebas\n4. Despliega si las pruebas son exitosas\n5. Monitorea el estado del despliegue\n\n## Mejores Pr√°cticas:\n- Prueba antes de desplegar\n- Usa entornos de staging (preproducci√≥n)\n- Monitorea las m√©tricas de despliegue\n- Configura notificaciones\n- Planifica estrategias de rollback", learningObjectives: ["Entender los conceptos y beneficios de CI/CD", "Configurar despliegues automatizados con GitHub", "Configurar pipelines de pruebas", "Implementar mejores pr√°cticas de despliegue"], badgeName: "Maestro de la Automatizaci√≥n", srcodeCommentary: "CI/CD es como tener un mayordomo que hace todo por ti. Excepto que no necesitas pagarle ni darle vacaciones.", practiceDescription: "Configura un pipeline completo de CI/CD con GitHub Actions para pruebas y despliegue automatizados.", quizQuestions: { "q4-3-1": { question: "¬øQu√© significa CI/CD?", options: ["Integraci√≥n de C√≥digo/Despliegue de C√≥digo", "Integraci√≥n Continua/Despliegue Continuo", "Integraci√≥n Central/Despliegue Central", "Integraci√≥n Personalizada/Despliegue Personalizado"], explanation: "CI/CD significa Integraci√≥n Continua y Despliegue Continuo." }, "q4-3-2": { question: "¬øQu√© sucede en un pipeline t√≠pico de CI/CD?", options: ["Solo despliegue de c√≥digo", "Solo pruebas", "Env√≠o de c√≥digo ‚Üí Ejecuci√≥n de pruebas ‚Üí Despliegue si las pruebas pasan", "Solo despliegue manual"], explanation: "Un pipeline t√≠pico de CI/CD ejecuta pruebas autom√°ticamente cuando se env√≠a el c√≥digo y despliega solo si las pruebas pasan." }, "q4-3-3": { question: "¬øCu√°l es el principal beneficio del despliegue automatizado?", options: ["Es m√°s caro", "Reduce el error humano y acelera el desarrollo", "Requiere m√°s trabajo manual", "Es solo para grandes empresas"], explanation: "El despliegue automatizado reduce el error humano, acelera los ciclos de desarrollo y asegura despliegues consistentes." }, "q4-3-4": { question: "¬øCu√°ndo deber√≠as desplegar a producci√≥n?", options: ["Inmediatamente despu√©s de escribir c√≥digo", "Solo despu√©s de que las pruebas pasen y la revisi√≥n de c√≥digo est√© completa", "Una vez al a√±o", "Nunca usar automatizaci√≥n"], explanation: "El c√≥digo solo debe desplegarse a producci√≥n despu√©s de pasar todas las pruebas y completar los procesos de revisi√≥n de c√≥digo." } } }, "lesson-5-1": { title: "GitHub: Tu Red de Seguridad", lessonTitleKey: "lessons.lesson-5-1.title", objective: "Completar la integraci√≥n con GitHub", content: "# GitHub: Tu Red de Seguridad\n\nGitHub es como un seguro para tu c√≥digo: ¬°nunca sabes cu√°ndo lo necesitar√°s hasta que lo necesitas URGENTEMENTE!\n\n## Por Qu√© Importa la Integraci√≥n con GitHub:\n- Control de versiones e historial\n- Capacidades de colaboraci√≥n\n- Respaldo y recuperaci√≥n\n- Compartir c√≥digo y c√≥digo abierto\n- Portafolio profesional\n\n## Caracter√≠sticas Clave:\n- Gesti√≥n de repositorios\n- Estrategias de ramas (branching)\n- Pull requests y revisi√≥n de c√≥digo\n- Issues y gesti√≥n de proyectos\n- GitHub Actions para CI/CD\n\n## Mejores Pr√°cticas:\n- Confirma (commit) temprano y a menudo\n- Escribe mensajes de confirmaci√≥n significativos\n- Usa ramas para nuevas funcionalidades\n- Revisa el c√≥digo antes de fusionar (merge)\n- Mant√©n los repositorios organizados\n\n## Integraci√≥n con bolt.new:\n1. Conecta tu cuenta de GitHub\n2. Crea un repositorio\n3. Configura la sincronizaci√≥n autom√°tica\n4. Configura webhooks\n5. Habilita funciones colaborativas", learningObjectives: ["Configurar la integraci√≥n de GitHub con bolt.new", "Entender los flujos de trabajo de Git y las mejores pr√°cticas", "Implementar procesos de desarrollo colaborativo", "Usar GitHub para la gesti√≥n de proyectos"], badgeName: "Gur√∫ de Git", srcodeCommentary: "GitHub es como el seguro del coche para tu c√≥digo. Nunca sabes cu√°ndo lo necesitar√°s hasta que lo necesitas URGENTEMENTE.", practiceDescription: "Configura un repositorio de GitHub para tu proyecto y practica hacer commits, ramas y pull requests.", quizQuestions: { "q5-1-1": { question: "¬øCu√°l es el prop√≥sito principal del control de versiones?", options: ["Hacer el c√≥digo m√°s lento", "Rastrear cambios y permitir la colaboraci√≥n", "Eliminar c√≥digo antiguo", "Hacer el c√≥digo m√°s dif√≠cil de leer"], explanation: "El control de versiones rastrea los cambios a lo largo del tiempo y permite que m√∫ltiples desarrolladores colaboren de forma segura." }, "q5-1-2": { question: "¬øQu√© es una rama (branch) en Git?", options: ["Un componente de √°rbol", "Una versi√≥n paralela de la base de c√≥digo para desarrollar funcionalidades", "Un tipo de commit", "Una configuraci√≥n de GitHub"], explanation: "Una rama es una versi√≥n paralela de la base de c√≥digo que te permite desarrollar funcionalidades sin afectar el c√≥digo principal." }, "q5-1-3": { question: "¬øQu√© debe incluir un buen mensaje de commit?", options: ["Texto aleatorio", "Una descripci√≥n clara de los cambios realizados", "Tu informaci√≥n personal", "Solo la fecha actual"], explanation: "Un buen mensaje de commit describe claramente qu√© cambios se hicieron y por qu√©." }, "q5-1-4": { question: "¬øQu√© es un pull request?", options: ["Una solicitud para eliminar c√≥digo", "Una solicitud para fusionar cambios de una rama a otra", "Una solicitud de m√°s funcionalidades", "Una solicitud para descargar c√≥digo"], explanation: "Un pull request es una solicitud para fusionar cambios de una rama a otra, permitiendo la revisi√≥n del c√≥digo." } } }, "lesson-5-2": { title: "Stripe: ¬°Ens√©√±ame la Pasta!", lessonTitleKey: "lessons.lesson-5-2.title", objective: "Integrar pagos con Stripe", content: "# Stripe: ¬°Ens√©√±ame la Pasta!\n\n¬°Es hora de monetizar tu obra maestra! Stripe hace que aceptar pagos sea tan f√°cil que podr√≠as venderle agua embotellada a los peces.\n\n## ¬øPor Qu√© Stripe?\n- Seguridad l√≠der en la industria\n- M√©todos de pago globales\n- APIs amigables para desarrolladores\n- Documentaci√≥n extensa\n- Modelos de precios flexibles\n\n## Conceptos Fundamentales:\n- **Payment Intents**: Procesamiento seguro de pagos\n- **Customers**: Gesti√≥n de usuarios\n- **Subscriptions**: Pagos recurrentes\n- **Webhooks**: Notificaciones en tiempo real\n- **Products**: Lo que est√°s vendiendo\n\n## Pasos de Implementaci√≥n:\n1. Crea una cuenta de Stripe\n2. Configura productos y precios\n3. Implementa formularios de pago\n4. Maneja webhooks\n5. Prueba exhaustivamente\n\n## Mejores Pr√°cticas de Seguridad:\n- Usa HTTPS en todas partes\n- Valida en el lado del servidor\n- Maneja el cumplimiento de PCI\n- Asegura los endpoints de webhook\n- Nunca almacenes datos de tarjetas", learningObjectives: ["Configurar el procesamiento de pagos con Stripe", "Implementar pagos √∫nicos y por suscripci√≥n", "Manejar webhooks para eventos de pago", "Aplicar mejores pr√°cticas de seguridad en pagos"], badgeName: "Hacedor de Dinero", srcodeCommentary: "Stripe hace que cobrar sea tan f√°cil que podr√≠as venderle agua embotellada a los peces. Pero por favor, no lo hagas.", practiceDescription: "Implementa un sistema de pago completo con pagos √∫nicos y suscripciones usando Stripe.", quizQuestions: { "q5-2-1": { question: "¬øQu√© es un Payment Intent en Stripe?", options: ["El deseo de un cliente de comprar algo", "Un objeto seguro que representa tu intenci√≥n de cobrar un pago", "Un tipo de tarjeta de cr√©dito", "Un empleado de Stripe"], explanation: "Un Payment Intent es un objeto seguro que rastrea todo el proceso de pago desde la creaci√≥n hasta la finalizaci√≥n." }, "q5-2-2": { question: "¬øD√≥nde deber√≠as almacenar la informaci√≥n de las tarjetas de cr√©dito?", options: ["En tu base de datos", "En el almacenamiento local (local storage)", "Nunca la almacenes - deja que Stripe se encargue", "En cookies"], explanation: "Nunca debes almacenar informaci√≥n de tarjetas de cr√©dito t√∫ mismo; deja que Stripe maneje todos los datos de pago sensibles." }, "q5-2-3": { question: "¬øPara qu√© se usan los webhooks en Stripe?", options: ["Para pescar", "Para recibir notificaciones en tiempo real sobre eventos de pago", "Para almacenar datos de clientes", "Para procesar reembolsos"], explanation: "Los webhooks notifican a tu aplicaci√≥n en tiempo real cuando ocurren eventos de pago, como pagos exitosos o cargos fallidos." }, "q5-2-4": { question: "¬øPor qu√© se requiere HTTPS para el procesamiento de pagos?", options: ["No es requerido", "Para cifrar datos de pago sensibles en tr√°nsito", "Para hacer el sitio m√°s r√°pido", "Para un mejor SEO"], explanation: "HTTPS cifra todos los datos entre el usuario y tu servidor, protegiendo la informaci√≥n de pago sensible." } } }, "lesson-5-3": { title: "De Figma a C√≥digo: Pura Magia", lessonTitleKey: "lessons.lesson-5-3.title", objective: "Importar dise√±os desde Figma", content: "# De Figma a C√≥digo: Pura Magia\n\nConvertir dise√±os hermosos en c√≥digo funcional: ¬°es como ser un mago digital!\n\n## ¬øQu√© es Figma a C√≥digo?\n- Conversi√≥n autom√°tica de dise√±o a c√≥digo\n- Implementaciones perfectas al p√≠xel\n- Soporte para dise√±o responsivo\n- Extracci√≥n de componentes\n- Generaci√≥n de estilos\n\n## Beneficios:\n- Desarrollo m√°s r√°pido\n- Consistencia en el dise√±o\n- Reducci√≥n de la codificaci√≥n manual\n- Mejor colaboraci√≥n entre dise√±ador y desarrollador\n- Resultados perfectos al p√≠xel\n\n## Proceso:\n1. Prepara los dise√±os de Figma\n2. Usa herramientas de Figma a C√≥digo\n3. Revisa el c√≥digo generado\n4. Personaliza y optimiza\n5. Integra con tu aplicaci√≥n\n\n## Mejores Pr√°cticas:\n- Organiza las capas de Figma adecuadamente\n- Usa nombres consistentes\n- Crea componentes reutilizables\n- Prueba el comportamiento responsivo\n- Optimiza el c√≥digo generado", learningObjectives: ["Convertir dise√±os de Figma en c√≥digo funcional", "Optimizar el c√≥digo generado para producci√≥n", "Mantener la consistencia del dise√±o", "Implementar patrones de dise√±o responsivo"], badgeName: "Traductor de Dise√±os", srcodeCommentary: "De Figma a C√≥digo es como Google Translate pero para dise√±adores. Y funciona mejor que Google Translate con el espa√±ol üòÇ", practiceDescription: "Convierte un dise√±o completo de Figma en componentes React funcionales e int√©gralos en tu aplicaci√≥n.", quizQuestions: { "q5-3-1": { question: "¬øCu√°l es el principal beneficio de la conversi√≥n de Figma a C√≥digo?", options: ["Hace que los dise√±os se vean peor", "Acelera el desarrollo y asegura la consistencia del dise√±o", "Es solo para aplicaciones m√≥viles", "No requiere habilidades de dise√±o"], explanation: "La conversi√≥n de Figma a C√≥digo acelera el desarrollo mientras mantiene una consistencia de dise√±o perfecta al p√≠xel." }, "q5-3-2": { question: "¬øQu√© deber√≠as hacer con el c√≥digo generado?", options: ["Usarlo exactamente como se gener√≥", "Revisarlo, optimizarlo y personalizarlo para tus necesidades", "Eliminarlo inmediatamente", "Nunca modificar el c√≥digo generado"], explanation: "El c√≥digo generado debe ser revisado, optimizado y personalizado para ajustarse a tus necesidades espec√≠ficas y est√°ndares de codificaci√≥n." }, "q5-3-3": { question: "¬øC√≥mo deber√≠as organizar los dise√±os de Figma para una mejor generaci√≥n de c√≥digo?", options: ["Nombrar todo aleatoriamente", "Usar nombres consistentes y organizaci√≥n de capas", "No organizar nada", "Solo usar capas de texto"], explanation: "El uso de nombres consistentes y una organizaci√≥n adecuada de las capas en Figma conduce a un c√≥digo generado mejor y m√°s mantenible." }, "q5-3-4": { question: "¬øQu√© deber√≠as considerar al convertir dise√±os a c√≥digo?", options: ["Solo versiones de escritorio", "Comportamiento responsivo en todos los tama√±os de dispositivo", "Solo versiones m√≥viles", "Los dise√±os no necesitan ser responsivos"], explanation: "Siempre debes considerar el comportamiento responsivo para asegurar que tu dise√±o funcione bien en todos los tama√±os de dispositivo." } } }, "lesson-6-1": { title: "Proyecto Final: Aplicaci√≥n Completa", lessonTitleKey: "lessons.lesson-6-1.title", objective: "Crear una aplicaci√≥n full-stack con todas las integraciones", content: "# Proyecto Final: Aplicaci√≥n Completa\n\n¬°Este es tu momento Avengers: Endgame! Es hora de usar todo lo que has aprendido.\n\n## Requisitos del Proyecto:\n- Arquitectura full-stack\n- Autenticaci√≥n de usuarios\n- Integraci√≥n de base de datos\n- Procesamiento de pagos\n- Funcionalidades en tiempo real\n- Despliegue profesional\n\n## Fase de Planificaci√≥n:\n1. Define el alcance del proyecto\n2. Crea el esquema de la base de datos\n3. Dise√±a los flujos de usuario\n4. Planifica la implementaci√≥n de funcionalidades\n5. Establece un cronograma e hitos\n\n## Lista de Verificaci√≥n de Implementaci√≥n:\n- [ ] Sistema de autenticaci√≥n de usuarios\n- [ ] Dise√±o y configuraci√≥n de la base de datos\n- [ ] Desarrollo de funcionalidades principales\n- [ ] Integraci√≥n de pagos\n- [ ] Funcionalidad en tiempo real\n- [ ] Pruebas y optimizaci√≥n\n- [ ] Despliegue en producci√≥n\n\n## Mejores Pr√°cticas:\n- Organizaci√≥n del c√≥digo\n- Manejo de errores\n- Optimizaci√≥n del rendimiento\n- Consideraciones de seguridad\n- Experiencia de usuario", learningObjectives: ["Aplicar todos los conceptos aprendidos en un proyecto completo", "Planificar y ejecutar una aplicaci√≥n full-stack", "Implementar pr√°cticas de desarrollo profesional", "Crear una aplicaci√≥n digna de un portafolio"], badgeName: "Maestro de Vibe Coding", srcodeCommentary: "Este es tu momento Avengers: Endgame. Hora de usar todo lo que aprendiste. ¬°No me decepciones! üöÄ", practiceDescription: "Construye una aplicaci√≥n full-stack completa incorporando todas las tecnolog√≠as y conceptos de lecciones anteriores.", quizQuestions: { "q6-1-1": { question: "¬øQu√© deber√≠as hacer antes de empezar a codificar tu proyecto final?", options: ["Empezar a codificar inmediatamente", "Planificar el alcance del proyecto, el esquema de la base de datos y los flujos de usuario", "Solo pensar en el dise√±o", "Omitir la planificaci√≥n por completo"], explanation: "Una planificaci√≥n adecuada, que incluya el alcance, el dise√±o de la base de datos y los flujos de usuario, es esencial para el √©xito del proyecto." }, "q6-1-2": { question: "¬øQu√© define una aplicaci√≥n full-stack?", options: ["Solo c√≥digo frontend", "Frontend, backend, base de datos y despliegue", "Solo base de datos", "Solo un dise√±o bonito"], explanation: "Una aplicaci√≥n full-stack incluye frontend, l√≥gica de backend, base de datos y un despliegue adecuado." }, "q6-1-3": { question: "¬øPor qu√© son importantes las pruebas en tu proyecto final?", options: ["No son importantes", "Para asegurar que la funcionalidad opere correctamente y detectar errores temprano", "Para hacer que el proyecto tarde m√°s", "Solo para grandes empresas"], explanation: "Las pruebas aseguran que tu aplicaci√≥n funcione correctamente y ayudan a detectar errores antes de que los usuarios los encuentren." }, "q6-1-4": { question: "¬øQu√© deber√≠as considerar para la experiencia de usuario?", options: ["Solo c√≥mo se ve", "Estados de carga, manejo de errores y navegaci√≥n intuitiva", "Solo los colores", "La UX no importa"], explanation: "Una buena UX incluye estados de carga, manejo adecuado de errores, navegaci√≥n intuitiva y dise√±o responsivo." } } }, "lesson-6-2": { title: "Optimizaci√≥n y Rendimiento", lessonTitleKey: "lessons.lesson-6-2.title", objective: "Optimizar la aplicaci√≥n para producci√≥n", content: "# Optimizaci√≥n y Rendimiento\n\nUna aplicaci√≥n lenta es como un chiste mal contado: nadie tiene paciencia para esperar el remate.\n\n## Core Web Vitals:\n- **LCP**: Largest Contentful Paint (carga)\n- **FID**: First Input Delay (interactividad)\n- **CLS**: Cumulative Layout Shift (estabilidad visual)\n\n## Estrategias de Rendimiento:\n- Divisi√≥n de c√≥digo y carga diferida (lazy loading)\n- Optimizaci√≥n de im√°genes\n- Estrategias de cach√©\n- Optimizaci√≥n del tama√±o del paquete (bundle size)\n- Optimizaci√≥n de consultas de base de datos\n\n## Herramientas de Monitoreo:\n- Auditor√≠as Lighthouse\n- Extensi√≥n Web Vitals\n- Anal√≠ticas de rendimiento\n- Monitoreo de usuarios reales (RUM)\n\n## Implementaci√≥n:\n1. Audita el rendimiento actual\n2. Identifica cuellos de botella\n3. Implementa optimizaciones\n4. Mide las mejoras\n5. Monitorea continuamente\n\n## Mejores Pr√°cticas:\n- Optimiza im√°genes y activos\n- Minimiza los paquetes de JavaScript\n- Usa CDN para activos est√°ticos\n- Implementa un almacenamiento en cach√© adecuado\n- Monitorea las m√©tricas de rendimiento", learningObjectives: ["Entender los Core Web Vitals y las m√©tricas de rendimiento", "Implementar t√©cnicas de optimizaci√≥n del rendimiento", "Usar herramientas de monitoreo del rendimiento", "Alcanzar un rendimiento listo para producci√≥n"], badgeName: "Demonio de la Velocidad", srcodeCommentary: "Una aplicaci√≥n lenta es como un chiste mal contado: nadie tiene paciencia para esperar el remate.", practiceDescription: "Optimiza tu aplicaci√≥n para alcanzar una puntuaci√≥n de Lighthouse de 95+ en todas las m√©tricas.", quizQuestions: { "q6-2-1": { question: "¬øQu√© mide el LCP?", options: ["Velocidad de carga del elemento de contenido m√°s grande", "Tiempo total de carga de la p√°gina", "Tiempo de ejecuci√≥n de JavaScript", "Tiempo de consulta de la base de datos"], explanation: "LCP (Largest Contentful Paint) mide cu√°n r√°pido se vuelve visible para los usuarios el elemento de contenido m√°s grande." }, "q6-2-2": { question: "¬øQu√© es la divisi√≥n de c√≥digo (code splitting)?", options: ["Dividir el c√≥digo en m√∫ltiples archivos aleatoriamente", "Dividir el c√≥digo en fragmentos m√°s peque√±os que se cargan cuando se necesitan", "Eliminar c√≥digo no utilizado", "Hacer el c√≥digo m√°s dif√≠cil de leer"], explanation: "La divisi√≥n de c√≥digo divide tu aplicaci√≥n en fragmentos m√°s peque√±os que se cargan bajo demanda, reduciendo el tama√±o inicial del paquete." }, "q6-2-3": { question: "¬øPor qu√© deber√≠as optimizar las im√°genes?", options: ["Para que se vean peor", "Para reducir el tama√±o del archivo y mejorar la velocidad de carga", "Las im√°genes no necesitan optimizaci√≥n", "Para aumentar el tama√±o de la p√°gina"], explanation: "La optimizaci√≥n de im√°genes reduce el tama√±o de los archivos, lo que mejora la velocidad de carga y el rendimiento general." }, "q6-2-4": { question: "¬øQu√© deber√≠as monitorear continuamente?", options: ["Solo durante el desarrollo", "M√©tricas de rendimiento en producci√≥n", "Nada necesita monitoreo", "Solo las tasas de error"], explanation: "El monitoreo continuo de las m√©tricas de rendimiento en producci√≥n ayuda a identificar y abordar problemas de rendimiento r√°pidamente." } } }, "lesson-6-3": { title: "Certificaci√≥n SrCode", lessonTitleKey: "lessons.lesson-6-3.title", objective: "Examen final de Vibe Coding", content: "# Certificaci√≥n SrCode\n\n¬°Bienvenido a la batalla final contra el jefe! Es hora de demostrar que realmente aprendiste algo.\n\n## Requisitos de Certificaci√≥n:\n- Completar las 18 lecciones\n- Aprobar el examen final completo (85%+)\n- Demostrar habilidades pr√°cticas\n- Mostrar comprensi√≥n de los conceptos b√°sicos\n- Aplicar mejores pr√°cticas\n\n## Cobertura del Examen:\n- Fundamentos de bolt.new\n- Ingenier√≠a de prompts\n- Dise√±o e integraci√≥n de bases de datos\n- Autenticaci√≥n y seguridad\n- Despliegue y optimizaci√≥n\n- Resoluci√≥n de problemas del mundo real\n\n## Lo Que Recibir√°s:\n- Certificaci√≥n Oficial SrCode\n- Insignia digital para LinkedIn\n- Ejemplos de proyectos para portafolio\n- Recomendaciones profesionales\n- Acceso a la comunidad\n\n## Beneficios Profesionales:\n- Experiencia validada en bolt.new\n- Credibilidad profesional\n- Oportunidades laborales\n- Capacidades para freelancing\n- Ruta de aprendizaje continuo\n\n## Palabras Finales de SrCode:\n¬°Has recorrido un largo camino! Desde no saber qu√© era bolt.new hasta construir aplicaciones full-stack. Apruebes o no este examen, ya has logrado algo incre√≠ble. ¬°Ahora ve y construye algo extraordinario!", learningObjectives: ["Demostrar maestr√≠a en todos los conceptos del curso", "Aplicar conocimientos para resolver problemas complejos", "Mostrar habilidades de desarrollo profesional", "Obtener la certificaci√≥n oficial"], badgeName: "Aprobado por SrCode", srcodeCommentary: "Si apruebas este examen, oficialmente sabes m√°s sobre bolt.new que el 90% de los desarrolladores. Si no... bueno, siempre puedes intentar ser influencer üòè", practiceDescription: "Completa el examen final exhaustivo que cubre todos los temas del curso y demuestra tu maestr√≠a a trav√©s de un proyecto final (capstone).", quizQuestions: { "q6-3-1": { question: "¬øCu√°l es la habilidad m√°s importante que has aprendido en este curso?", options: ["Memorizar la sintaxis del c√≥digo", "Entender c√≥mo desglosar problemas y construir soluciones sistem√°ticamente", "Usar solo herramientas espec√≠ficas", "Copiar c√≥digo de tutoriales"], explanation: "La habilidad m√°s valiosa es aprender a desglosar problemas complejos y construir soluciones sistem√°ticas utilizando herramientas modernas." }, "q6-3-2": { question: "¬øQu√© hace a un buen desarrollador de bolt.new?", options: ["Conocer cada caracter√≠stica de memoria", "Escribir prompts claros, entender el stack completo y aplicar mejores pr√°cticas", "Solo enfocarse en el frontend", "Evitar las bases de datos"], explanation: "Un buen desarrollador de bolt.new combina comunicaci√≥n clara, comprensi√≥n del stack completo y mejores pr√°cticas profesionales." }, "q6-3-3": { question: "¬øC√≥mo deber√≠as abordar la construcci√≥n de una nueva aplicaci√≥n?", options: ["Empezar a codificar inmediatamente", "Planificar a fondo, construir incrementalmente, probar continuamente y desplegar con confianza", "Solo enfocarse en el dise√±o", "Construir todo de una vez"], explanation: "El desarrollo profesional implica planificar, construir incrementalmente, probar continuamente y desplegar con confianza." }, "q6-3-4": { question: "¬øCu√°l es el secreto para el √©xito continuo como desarrollador?", options: ["Dejar de aprender despu√©s de este curso", "Seguir aprendiendo, construyendo y compartiendo conocimiento con la comunidad", "Solo usar bolt.new para siempre", "Evitar nuevas tecnolog√≠as"], explanation: "El √©xito continuo proviene del aprendizaje permanente, la construcci√≥n constante y la participaci√≥n activa en la comunidad de desarrolladores." } } } },
    quiz: { title: 'Quiz', question: 'Pregunta {{current}} de {{total}}', backToLesson: 'Volver a la Lecci√≥n', congratulations: '¬°Felicidades!', keepTrying: '¬°Sigue Intentando!', passedMessage: '¬°Has completado exitosamente "{{lessonTitle}}" y ganado la insignia "{{badgeName}}"!', failedMessage: 'Necesitas 85% o m√°s para aprobar. Obtuviste {{score}}%. ¬°Revisa la lecci√≥n e int√©ntalo de nuevo!', badgeEarned: 'üèÜ Insignia Ganada: {{badgeName}} (+{{xp}} XP)', continueLearning: 'Continuar Aprendiendo', reviewLesson: 'Revisar Lecci√≥n', retakeQuiz: 'Repetir Quiz', bestScore: 'Mejor Puntuaci√≥n: {{score}}%', explanation: 'Explicaci√≥n', loadError: 'No se pudieron cargar las preguntas del quiz.' },
    badges: { title: 'Colecci√≥n de Insignias', earned: '{{earned}} de {{total}} insignias ganadas', earnedOn: 'Ganada el {{date}}', unlockHint: 'Completa las lecciones del Nivel {{level}} para desbloquear' },
    certificate: { title: 'Certificado', congratulations: '¬°Felicidades! üéâ', earned: '¬°Has completado las 18 lecciones y ganado tu certificado!', download: 'Descargar Certificado', keepLearning: '¬°Sigue Aprendiendo!', progress: 'Completa las 18 lecciones para ganar tu certificado', remaining: '{{count}} lecciones restantes', certificateOf: 'CERTIFICADO DE FINALIZACI√ìN', academyName: 'Vibe Coding Academy', certifies: 'Esto certifica que', hasCompleted: 'ha completado exitosamente las 18 lecciones del', courseName: 'Curso de Maestr√≠a bolt.new', totalXP: 'XP Total: {{xp}}', completionDate: 'Fecha de Finalizaci√≥n: {{date}}', certifiedBy: 'Certificado por SrCode', seniorMentor: 'Mentor Senior de IA', studentNamePlaceholder: '[Nombre del Estudiante]' },
    srcode: { title: 'SrCode', subtitle: 'Mentor IA', placeholder: 'Preg√∫ntale a SrCode sobre esta lecci√≥n...', thinking: 'SrCode est√° pensando...', welcomeMessage: '¬°Hola! üëã Soy SrCode, tu mentor de IA para "{{lessonTitle}}". ¬øListo para sumergirte en la magia de bolt.new? ¬°Preg√∫ntame lo que quieras sobre esta lecci√≥n!', errorMessage: '¬°Ups! Estoy teniendo algunas dificultades t√©cnicas. ¬°Intenta de nuevo en un momento! üîß', offline: 'Actualmente estoy desconectado, ¬°pero volver√© pronto! üíª' }
  },
  fr: { /* ... All French translations ... */ }
  // Other languages if they exist
};
